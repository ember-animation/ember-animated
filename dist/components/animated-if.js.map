{"version":3,"file":"animated-if.js","sources":["../../src/components/animated-if.ts"],"sourcesContent":["import Component from '@ember/component';\nimport { computed } from '@ember/object';\nimport type { AnimatedEachSignature } from './animated-each.ts';\n\ninterface AnimatedIfSignature<T> {\n  Args: {\n    Positional: [T];\n    Named: AnimatedEachSignature<[T]>['Args']['Named'];\n  };\n  Blocks: {\n    default: [];\n    else: [];\n  };\n}\n\n/**\n  A drop in replacement for `{{#if}}` that animates changes when the predicate changes.\n  Animated-if uses the same arguments as animated-each.\n\n  ```hbs\n  <button {{on 'click' this.toggleThing}}>Toggle</button>\n\n  {{#animated-if showThing use=transition}}\n    <div class=\"message\" {{on 'click' this.toggleThing}} role=\"button\">\n      myContent\n    </div>\n  {{/animated-if}}\n  ```\n\n  ```js\n  import Component from '@glimmer/component';\n  import move from 'ember-animated/motions/move';\n  import { easeOut, easeIn } from 'ember-animated/easings/cosine';\n  import { tracked } from '@glimmer/tracking';\n\n  export default class FooComponent extends Component {\n    @tracked showThing = false;\n\n    toggleThing() {\n      this.showThing = !this.showThing;\n    }\n\n    // eslint-disable-next-line require-yield\n    *transition({ insertedSprites, keptSprites, removedSprites }) {\n      for (let sprite of insertedSprites) {\n        sprite.startAtPixel({ x: window.innerWidth });\n        move(sprite, { easing: easeOut });\n      }\n\n      for (let sprite of keptSprites) {\n        move(sprite);\n      }\n\n      for (let sprite of removedSprites) {\n        sprite.endAtPixel({ x: window.innerWidth });\n        move(sprite, { easing: easeIn });\n      }\n    }\n  };\n  ```\n  @class animated-if\n  @public\n*/\nexport default class AnimatedIfComponent<T> extends Component<\n  AnimatedIfSignature<T>\n> {\n  tagName = '';\n  static positionalParams = ['predicate'];\n\n  declare predicate: T;\n  group: AnimatedEachSignature<T>['Args']['Named']['group'];\n  finalRemoval: AnimatedEachSignature<T>['Args']['Named']['finalRemoval'];\n  initialInsertion: AnimatedEachSignature<T>['Args']['Named']['initialInsertion'];\n  key: AnimatedEachSignature<T>['Args']['Named']['key'];\n  rules: AnimatedEachSignature<T>['Args']['Named']['rules'];\n  use: AnimatedEachSignature<T>['Args']['Named']['use'];\n  duration: AnimatedEachSignature<T>['Args']['Named']['duration'];\n\n  @computed('group')\n  get realGroup() {\n    return this.group || `animated_if_${Math.floor(Math.random() * 1000000)}`;\n  }\n}\n"],"names":["AnimatedIfComponent","Component","tagName","positionalParams","group","finalRemoval","initialInsertion","key","rules","use","duration","realGroup","Math","floor","random","n","prototype","computed","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;;AAeA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMA,mBAAmB,SAAYC,SAAS,CAE3D;AACAC,EAAAA,OAAO,GAAG,EAAE;AACZ,EAAA,OAAOC,gBAAgB,GAAG,CAAC,WAAW,CAAC;EAGvCC,KAAK;EACLC,YAAY;EACZC,gBAAgB;EAChBC,GAAG;EACHC,KAAK;EACLC,GAAG;EACHC,QAAQ;EAER,IACIC,SAASA,GAAG;AACd,IAAA,OAAO,IAAI,CAACP,KAAK,IAAI,CAAA,YAAA,EAAeQ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,OAAO,CAAC,CAAE,CAAA;AAC3E;AAAC,EAAA;AAAAC,IAAAA,CAAA,MAAAC,SAAA,EAAA,WAAA,EAAA,CAHAC,QAAQ,CAAC,OAAO,CAAC,CAAA,CAAA;AAAA;AAIpB;AAACC,oBAAA,CAAAC,QAAA,EAnBoBnB,mBAAmB,CAAA;;;;"}