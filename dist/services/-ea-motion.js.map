{"version":3,"file":"-ea-motion.js","sources":["../../src/services/-ea-motion.ts"],"sourcesContent":["import type EmberObject from '@ember/object';\nimport { computed } from '@ember/object';\nimport { A } from '@ember/array';\nimport Service from '@ember/service';\nimport type { Task } from '../-private/ember-scheduler.ts';\nimport { task } from '../-private/ember-scheduler.ts';\nimport {\n  microwait,\n  rAF,\n  afterRender,\n  allSettled,\n} from '../-private/concurrency-helpers.ts';\nimport type Sprite from '../-private/sprite.ts';\nimport type Child from '../-private/child';\nimport type { Transition } from '../-private/transition.ts';\nimport type { NativeArray } from '@ember/array';\n\ninterface Animator extends EmberObject {\n  beginStaticMeasurement(): void;\n  endStaticMeasurement(): void;\n  isAnimating: boolean;\n}\n\nexport type OrphanObserver = (\n  removed: Sprite[],\n  transition: Transition,\n  duration: number,\n  shouldAnimateRemoved: boolean,\n) => void;\n\ntype AnimationObserver = (args: {\n  task: Promise<void>;\n  duration: number;\n}) => void;\n\ntype AncestorObserver = (state: Child['state']) => void;\n\ninterface BaseComponentLike extends EmberObject {\n  parentView: ComponentLike | undefined;\n}\n\ninterface AnimatedListElement extends BaseComponentLike {\n  isEmberAnimatedListElement: true;\n  child: Child;\n}\n\ntype ComponentLike = BaseComponentLike | AnimatedListElement;\n\ninterface Measurement {\n  fn: () => void;\n  resolved: boolean;\n  value: any;\n}\n\ninterface Rendezvous {\n  inserted: Sprite[];\n  kept: Sprite[];\n  removed: Sprite[];\n  matches: Map<Sprite, Sprite>;\n  runAnimationTask: Promise<void>;\n  otherTasks: Map<Promise<void>, true>;\n}\n\nexport default class MotionService extends Service {\n  _rendezvous: Rendezvous[] = [];\n  _measurements: Measurement[] = [];\n  _animators: NativeArray<Animator> = A<Animator>();\n  _orphanObserver: OrphanObserver | null = null;\n  _animationObservers: AnimationObserver[] = [];\n  _descendantObservers: {\n    component: ComponentLike;\n    fn: AnimationObserver;\n  }[] = [];\n  _ancestorObservers: WeakMap<ComponentLike, Map<AncestorObserver, string>> =\n    new WeakMap();\n  _beacons: { [name: string]: Sprite } | null = null;\n\n  // === Notification System ===\n\n  // Ever animator should register and unregister itself so we know\n  // when there are any animations running. Animators are required to\n  // have:\n  //    - an isAnimating property\n  //    - beginStaticMeasurement and endStaticMeasurement methods\n  register(animator: Animator) {\n    this._animators.pushObject(animator);\n    return this;\n  }\n  unregister(animator: Animator) {\n    this._animators.removeObject(animator);\n    return this;\n  }\n\n  // Register to receive any sprites that are orphaned by a destroyed\n  // animator.\n  observeOrphans(fn: OrphanObserver) {\n    if (this._orphanObserver) {\n      throw new Error(\n        'Only one animated-orphans component can be used at one time',\n      );\n    }\n    this._orphanObserver = fn;\n    return this;\n  }\n  unobserveOrphans(fn: OrphanObserver) {\n    if (this._orphanObserver === fn) {\n      this._orphanObserver = null;\n    }\n    return this;\n  }\n\n  // Register to know when an animation is starting anywhere in the app.\n  observeAnimations(fn: AnimationObserver) {\n    this._animationObservers.push(fn);\n    return this;\n  }\n  unobserveAnimations(fn: AnimationObserver) {\n    let index = this._animationObservers.indexOf(fn);\n    if (index !== -1) {\n      this._animationObservers.splice(index, 1);\n    }\n    return this;\n  }\n\n  // Register to know when an animation is starting within the\n  // descendants of the given component\n  observeDescendantAnimations(component: ComponentLike, fn: AnimationObserver) {\n    this._descendantObservers.push({ component, fn });\n    return this;\n  }\n  unobserveDescendantAnimations(\n    component: ComponentLike,\n    fn: AnimationObserver,\n  ) {\n    let entry = this._descendantObservers.find(\n      (e) => e.component === component && e.fn === fn,\n    );\n    if (entry) {\n      this._descendantObservers.splice(\n        this._descendantObservers.indexOf(entry),\n        1,\n      );\n    }\n    return this;\n  }\n\n  // Register to know when an animation is starting among the\n  // ancestors of the given component. The fn will be told whether\n  // component is going to be destroyed or not at the end of the\n  // animation.\n  observeAncestorAnimations(component: ComponentLike, fn: AncestorObserver) {\n    let id;\n    for (let ancestorComponent of ancestorsOf(component)) {\n      // when we find an animated list element, we save its ID\n      if ('isEmberAnimatedListElement' in ancestorComponent) {\n        id = ancestorComponent.child.id;\n      } else if (id != null) {\n        // if we found an ID on the last loop, now we've got the list\n        // element's parent which is the actual animator.\n        let observers = this._ancestorObservers.get(ancestorComponent);\n        if (!observers) {\n          this._ancestorObservers.set(\n            ancestorComponent,\n            (observers = new Map()),\n          );\n        }\n        observers.set(fn, id);\n        id = null;\n      }\n    }\n    return this;\n  }\n  unobserveAncestorAnimations(component: ComponentLike, fn: AncestorObserver) {\n    for (let ancestorComponent of ancestorsOf(component)) {\n      let observers = this._ancestorObservers.get(ancestorComponent);\n      if (observers) {\n        observers.delete(fn);\n      }\n    }\n    return this;\n  }\n\n  // This is a publicly visible property you can use to know if any animations\n  // are running. It's timing is deliberately not synchronous, so that you can\n  // bind it into a template without getting double-render errors.\n  //\n  // We have an un-observed dependency on an internal property *on purpose*, so\n  // this lint rule needs to be disabled:\n  //\n  // eslint-disable-next-line ember/require-computed-property-dependencies\n  @computed()\n  get isAnimating(): boolean {\n    return this.isAnimatingSync;\n  }\n\n  // Synchronously updated version of isAnimating. If you try to\n  // depend on this in a template you will get double-render errors\n  // (because the act of rendering can cause animations to begin).\n  @computed('_animators.@each.isAnimating')\n  get isAnimatingSync() {\n    return this._animators.any((animator) => animator.isAnimating);\n  }\n\n  // Invalidation support for isAnimating\n  @(task(function* (this: MotionService) {\n    yield rAF();\n    this.notifyPropertyChange('isAnimating');\n  }).observes('isAnimatingSync'))\n  _invalidateIsAnimating!: Task;\n\n  @task(function* (this: MotionService) {\n    // we are idle if we experience two frames in a row with nothing\n    // animating.\n    while (true) {\n      yield rAF();\n      if (!this.isAnimatingSync) {\n        yield rAF();\n        if (!this.isAnimatingSync) {\n          return;\n        }\n      }\n    }\n  })\n  waitUntilIdle!: Task;\n\n  matchDestroyed(\n    removed: Sprite[],\n    transition: Transition,\n    duration: number,\n    shouldAnimateRemoved: boolean,\n  ) {\n    if (this._orphanObserver && removed.length > 0) {\n      // if these orphaned sprites may be capable of animating,\n      // delegate them to the orphanObserver. It will do farMatching\n      // for them.\n      this._orphanObserver(removed, transition, duration, shouldAnimateRemoved);\n    } else {\n      // otherwise, we make them available for far matching but they\n      // can't be animated.\n      this.farMatch.perform(null, [], [], removed, true);\n    }\n  }\n\n  hasBeacon(name: string) {\n    return this._beacons?.[name];\n  }\n\n  @task(function* (this: MotionService, name: string, beacon: Sprite) {\n    if (!this._beacons) {\n      this._beacons = {};\n    }\n    this._beacons[name] = beacon;\n    // allows other farMatches to start\n    yield microwait();\n    // allows other farMatches to finish\n    yield microwait();\n    this._beacons = null;\n  })\n  addBeacon!: Task;\n\n  @task(function* (\n    this: MotionService,\n    runAnimationTask: Promise<void>,\n    inserted: Sprite[],\n    kept: Sprite[],\n    removed: Sprite[],\n    longWait = false,\n  ) {\n    let matches = new Map() as Map<Sprite, Sprite>;\n    let mine = {\n      inserted,\n      kept,\n      removed,\n      matches,\n      runAnimationTask,\n      otherTasks: new Map(),\n    };\n    this._rendezvous.push(mine);\n    yield microwait();\n    if (longWait) {\n      // used by matchDestroyed because it gets called earlier in the\n      // render cycle, so it needs to linger longer in order to\n      // coincide with other farMatches.\n      yield afterRender();\n      yield microwait();\n      yield microwait();\n    }\n\n    if (this.farMatch.concurrency > 1) {\n      this._rendezvous.forEach((target) => {\n        if (target === mine) {\n          return;\n        }\n        performMatches(mine, target);\n        performMatches(target, mine);\n      });\n    }\n    this._rendezvous.splice(this._rendezvous.indexOf(mine), 1);\n    return {\n      farMatches: matches,\n      matchingAnimatorsFinished: allSettled([...mine.otherTasks.keys()]),\n      beacons: this._beacons,\n    };\n  })\n  farMatch!: Task;\n\n  willAnimate({\n    task,\n    duration,\n    component,\n    children,\n  }: {\n    task: Promise<void>;\n    duration: number;\n    component: ComponentLike;\n    children: Child[];\n  }) {\n    let message = { task, duration };\n\n    // tell any of our ancestors who are observing their descendants\n    let ancestors = [...ancestorsOf(component)];\n    for (let { component: observingComponent, fn } of this\n      ._descendantObservers) {\n      if (ancestors.indexOf(observingComponent) !== -1) {\n        fn(message);\n      }\n    }\n\n    // tell any of our descendants who are observing their ancestors\n    let observers = this._ancestorObservers.get(component);\n    if (observers) {\n      for (let [fn, id] of observers.entries()) {\n        let child = children.find((child) => child.id === id);\n        if (child) {\n          fn(child.state);\n        } // the else case here applies to descendants that are about\n        // to be unrendered (not animated away -- immediately\n        // dropped). They will still have an opportunity to animate\n        // too, but they do it via their own willDestroyElement\n        // hook, not the this early-warning hook.\n      }\n    }\n\n    // tell anybody who is listening for all animations\n    for (let fn of this._animationObservers) {\n      fn(message);\n    }\n  }\n\n  *staticMeasurement(fn: Measurement['fn']) {\n    let measurement: Measurement = { fn, resolved: false, value: null };\n    this._measurements.push(measurement);\n    try {\n      // allow all concurrent animators to join in with our single\n      // measurement step instead of having each trigger its own reflow.\n      yield microwait();\n\n      if (!measurement.resolved) {\n        // we are the first concurrent task to wake up, so we do the\n        // actual resolution for everyone.\n        let animators = this._animators;\n        animators.forEach((animator) => animator.beginStaticMeasurement());\n        this._measurements.forEach((m) => {\n          try {\n            m.value = m.fn();\n          } catch (err) {\n            setTimeout(function () {\n              throw err;\n            }, 0);\n          }\n          m.resolved = true;\n        });\n        animators.forEach((animator) => animator.endStaticMeasurement());\n      }\n      return measurement.value;\n    } finally {\n      this._measurements.splice(this._measurements.indexOf(measurement), 1);\n    }\n  }\n}\n\nfunction performMatches(sink: Rendezvous, source: Rendezvous) {\n  sink.inserted.concat(sink.kept).forEach((sprite) => {\n    let match = source.removed.find(\n      // TODO: an OwnedSprite type could eliminate the need for these\n      // non-nullable casts.\n      (mySprite) =>\n        sprite.owner!.group == mySprite.owner!.group &&\n        sprite.owner!.id === mySprite.owner!.id,\n    );\n    if (match) {\n      sink.matches.set(sprite, match);\n      sink.otherTasks.set(source.runAnimationTask, true);\n      source.matches.set(match, sprite);\n      source.otherTasks.set(sink.runAnimationTask, true);\n    }\n  });\n}\n\nfunction* ancestorsOf(component: ComponentLike) {\n  let pointer = component.parentView;\n  while (pointer) {\n    yield pointer;\n    pointer = pointer.parentView;\n  }\n}\n\ndeclare module '@ember/service' {\n  interface Registry {\n    '-ea-motion': MotionService;\n  }\n}\n"],"names":["MotionService","Service","_rendezvous","_measurements","_animators","A","_orphanObserver","_animationObservers","_descendantObservers","_ancestorObservers","WeakMap","_beacons","register","animator","pushObject","unregister","removeObject","observeOrphans","fn","Error","unobserveOrphans","observeAnimations","push","unobserveAnimations","index","indexOf","splice","observeDescendantAnimations","component","unobserveDescendantAnimations","entry","find","e","observeAncestorAnimations","id","ancestorComponent","ancestorsOf","child","observers","get","set","Map","unobserveAncestorAnimations","delete","isAnimating","isAnimatingSync","n","prototype","computed","any","g","task","rAF","notifyPropertyChange","observes","i","void 0","matchDestroyed","removed","transition","duration","shouldAnimateRemoved","length","farMatch","perform","hasBeacon","name","beacon","microwait","runAnimationTask","inserted","kept","longWait","matches","mine","otherTasks","afterRender","concurrency","forEach","target","performMatches","farMatches","matchingAnimatorsFinished","allSettled","keys","beacons","willAnimate","children","message","ancestors","observingComponent","entries","state","staticMeasurement","measurement","resolved","value","animators","beginStaticMeasurement","m","err","setTimeout","endStaticMeasurement","sink","source","concat","sprite","match","mySprite","owner","group","pointer","parentView"],"mappings":";;;;;;;AA+De,MAAMA,aAAa,SAASC,OAAO,CAAC;AACjDC,EAAAA,WAAW,GAAiB,EAAE;AAC9BC,EAAAA,aAAa,GAAkB,EAAE;EACjCC,UAAU,GAA0BC,CAAC,EAAY;AACjDC,EAAAA,eAAe,GAA0B,IAAI;AAC7CC,EAAAA,mBAAmB,GAAwB,EAAE;AAC7CC,EAAAA,oBAAoB,GAGd,EAAE;AACRC,EAAAA,kBAAkB,GAChB,IAAIC,OAAO,EAAE;AACfC,EAAAA,QAAQ,GAAsC,IAAI;;AAElD;;AAEA;AACA;AACA;AACA;AACA;EACAC,QAAQA,CAACC,QAAkB,EAAE;AAC3B,IAAA,IAAI,CAACT,UAAU,CAACU,UAAU,CAACD,QAAQ,CAAC;AACpC,IAAA,OAAO,IAAI;AACb;EACAE,UAAUA,CAACF,QAAkB,EAAE;AAC7B,IAAA,IAAI,CAACT,UAAU,CAACY,YAAY,CAACH,QAAQ,CAAC;AACtC,IAAA,OAAO,IAAI;AACb;;AAEA;AACA;EACAI,cAAcA,CAACC,EAAkB,EAAE;IACjC,IAAI,IAAI,CAACZ,eAAe,EAAE;AACxB,MAAA,MAAM,IAAIa,KAAK,CACb,6DACF,CAAC;AACH;IACA,IAAI,CAACb,eAAe,GAAGY,EAAE;AACzB,IAAA,OAAO,IAAI;AACb;EACAE,gBAAgBA,CAACF,EAAkB,EAAE;AACnC,IAAA,IAAI,IAAI,CAACZ,eAAe,KAAKY,EAAE,EAAE;MAC/B,IAAI,CAACZ,eAAe,GAAG,IAAI;AAC7B;AACA,IAAA,OAAO,IAAI;AACb;;AAEA;EACAe,iBAAiBA,CAACH,EAAqB,EAAE;AACvC,IAAA,IAAI,CAACX,mBAAmB,CAACe,IAAI,CAACJ,EAAE,CAAC;AACjC,IAAA,OAAO,IAAI;AACb;EACAK,mBAAmBA,CAACL,EAAqB,EAAE;IACzC,IAAIM,KAAK,GAAG,IAAI,CAACjB,mBAAmB,CAACkB,OAAO,CAACP,EAAE,CAAC;AAChD,IAAA,IAAIM,KAAK,KAAK,EAAE,EAAE;MAChB,IAAI,CAACjB,mBAAmB,CAACmB,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;AAC3C;AACA,IAAA,OAAO,IAAI;AACb;;AAEA;AACA;AACAG,EAAAA,2BAA2BA,CAACC,SAAwB,EAAEV,EAAqB,EAAE;AAC3E,IAAA,IAAI,CAACV,oBAAoB,CAACc,IAAI,CAAC;MAAEM,SAAS;AAAEV,MAAAA;AAAG,KAAC,CAAC;AACjD,IAAA,OAAO,IAAI;AACb;AACAW,EAAAA,6BAA6BA,CAC3BD,SAAwB,EACxBV,EAAqB,EACrB;IACA,IAAIY,KAAK,GAAG,IAAI,CAACtB,oBAAoB,CAACuB,IAAI,CACvCC,CAAC,IAAKA,CAAC,CAACJ,SAAS,KAAKA,SAAS,IAAII,CAAC,CAACd,EAAE,KAAKA,EAC/C,CAAC;AACD,IAAA,IAAIY,KAAK,EAAE;AACT,MAAA,IAAI,CAACtB,oBAAoB,CAACkB,MAAM,CAC9B,IAAI,CAAClB,oBAAoB,CAACiB,OAAO,CAACK,KAAK,CAAC,EACxC,CACF,CAAC;AACH;AACA,IAAA,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACAG,EAAAA,yBAAyBA,CAACL,SAAwB,EAAEV,EAAoB,EAAE;AACxE,IAAA,IAAIgB,EAAE;AACN,IAAA,KAAK,IAAIC,iBAAiB,IAAIC,WAAW,CAACR,SAAS,CAAC,EAAE;AACpD;MACA,IAAI,4BAA4B,IAAIO,iBAAiB,EAAE;AACrDD,QAAAA,EAAE,GAAGC,iBAAiB,CAACE,KAAK,CAACH,EAAE;AACjC,OAAC,MAAM,IAAIA,EAAE,IAAI,IAAI,EAAE;AACrB;AACA;QACA,IAAII,SAAS,GAAG,IAAI,CAAC7B,kBAAkB,CAAC8B,GAAG,CAACJ,iBAAiB,CAAC;QAC9D,IAAI,CAACG,SAAS,EAAE;AACd,UAAA,IAAI,CAAC7B,kBAAkB,CAAC+B,GAAG,CACzBL,iBAAiB,EAChBG,SAAS,GAAG,IAAIG,GAAG,EACtB,CAAC;AACH;AACAH,QAAAA,SAAS,CAACE,GAAG,CAACtB,EAAE,EAAEgB,EAAE,CAAC;AACrBA,QAAAA,EAAE,GAAG,IAAI;AACX;AACF;AACA,IAAA,OAAO,IAAI;AACb;AACAQ,EAAAA,2BAA2BA,CAACd,SAAwB,EAAEV,EAAoB,EAAE;AAC1E,IAAA,KAAK,IAAIiB,iBAAiB,IAAIC,WAAW,CAACR,SAAS,CAAC,EAAE;MACpD,IAAIU,SAAS,GAAG,IAAI,CAAC7B,kBAAkB,CAAC8B,GAAG,CAACJ,iBAAiB,CAAC;AAC9D,MAAA,IAAIG,SAAS,EAAE;AACbA,QAAAA,SAAS,CAACK,MAAM,CAACzB,EAAE,CAAC;AACtB;AACF;AACA,IAAA,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,IACI0B,WAAWA,GAAY;IACzB,OAAO,IAAI,CAACC,eAAe;AAC7B;;AAEA;AACA;AACA;AAAA,EAAA;AAAAC,IAAAA,CAAA,CAAAC,IAAAA,CAAAA,SAAA,EAPCC,aAAAA,EAAAA,CAAAA,QAAQ,EAAE,CAAA,CAAA;AAAA;EAQX,IACIH,eAAeA,GAAG;IACpB,OAAO,IAAI,CAACzC,UAAU,CAAC6C,GAAG,CAAEpC,QAAQ,IAAKA,QAAQ,CAAC+B,WAAW,CAAC;AAChE;;AAEA;AAAA,EAAA;AAAAE,IAAAA,CAAA,MAAAC,SAAA,EAAA,iBAAA,EAAA,CALCC,QAAQ,CAAC,8BAA8B,CAAC,CAAA,CAAA;AAAA;AAAA,EAAA;AAAAE,IAAAA,CAAA,CAAAH,IAAAA,CAAAA,SAAA,EAMvCI,wBAAAA,EAAAA,CAAAA,IAAI,CAAC,aAAgC;MACrC,MAAMC,GAAG,EAAE;AACX,MAAA,IAAI,CAACC,oBAAoB,CAAC,aAAa,CAAC;AAC1C,KAAC,CAAC,CAACC,QAAQ,CAAC,iBAAiB,CAAC,CAAA,CAAA;AAAA;AAAA,EAAA,uBAAA,IAAAC,CAAA,CAAA,IAAA,EAAA,wBAAA,CAAA,EAAAC,MAAA;AAAA,EAAA;AAAAN,IAAAA,CAAA,CAAAH,IAAAA,CAAAA,SAAA,EAG7BI,eAAAA,EAAAA,CAAAA,IAAI,CAAC,aAAgC;AACpC;AACA;AACA,MAAA,OAAO,IAAI,EAAE;QACX,MAAMC,GAAG,EAAE;AACX,QAAA,IAAI,CAAC,IAAI,CAACP,eAAe,EAAE;UACzB,MAAMO,GAAG,EAAE;AACX,UAAA,IAAI,CAAC,IAAI,CAACP,eAAe,EAAE;AACzB,YAAA;AACF;AACF;AACF;AACF,KAAC,CAAC,CAAA,CAAA;AAAA;AAAA,EAAA,cAAA,IAAAU,CAAA,CAAA,IAAA,EAAA,eAAA,CAAA,EAAAC,MAAA;EAGFC,cAAcA,CACZC,OAAiB,EACjBC,UAAsB,EACtBC,QAAgB,EAChBC,oBAA6B,EAC7B;IACA,IAAI,IAAI,CAACvD,eAAe,IAAIoD,OAAO,CAACI,MAAM,GAAG,CAAC,EAAE;AAC9C;AACA;AACA;MACA,IAAI,CAACxD,eAAe,CAACoD,OAAO,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,oBAAoB,CAAC;AAC3E,KAAC,MAAM;AACL;AACA;AACA,MAAA,IAAI,CAACE,QAAQ,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAEN,OAAO,EAAE,IAAI,CAAC;AACpD;AACF;EAEAO,SAASA,CAACC,IAAY,EAAE;AACtB,IAAA,OAAO,IAAI,CAACvD,QAAQ,GAAGuD,IAAI,CAAC;AAC9B;AAAC,EAAA;IAAAhB,CAAA,CAAA,IAAA,CAAAH,SAAA,EAEAI,WAAAA,EAAAA,CAAAA,IAAI,CAAC,WAAgCe,IAAY,EAAEC,MAAc,EAAE;AAClE,MAAA,IAAI,CAAC,IAAI,CAACxD,QAAQ,EAAE;AAClB,QAAA,IAAI,CAACA,QAAQ,GAAG,EAAE;AACpB;AACA,MAAA,IAAI,CAACA,QAAQ,CAACuD,IAAI,CAAC,GAAGC,MAAM;AAC5B;MACA,MAAMC,SAAS,EAAE;AACjB;MACA,MAAMA,SAAS,EAAE;MACjB,IAAI,CAACzD,QAAQ,GAAG,IAAI;AACtB,KAAC,CAAC,CAAA,CAAA;AAAA;AAAA,EAAA,UAAA,IAAA4C,CAAA,CAAA,IAAA,EAAA,WAAA,CAAA,EAAAC,MAAA;AAAA,EAAA;AAAAN,IAAAA,CAAA,MAAAH,SAAA,EAAA,UAAA,EAAA,CAGDI,IAAI,CAAC,WAEJkB,gBAA+B,EAC/BC,QAAkB,EAClBC,IAAc,EACdb,OAAiB,EACjBc,QAAQ,GAAG,KAAK,EAChB;AACA,MAAA,IAAIC,OAAO,GAAG,IAAIhC,GAAG,EAAyB;AAC9C,MAAA,IAAIiC,IAAI,GAAG;QACTJ,QAAQ;QACRC,IAAI;QACJb,OAAO;QACPe,OAAO;QACPJ,gBAAgB;QAChBM,UAAU,EAAE,IAAIlC,GAAG;OACpB;AACD,MAAA,IAAI,CAACvC,WAAW,CAACoB,IAAI,CAACoD,IAAI,CAAC;MAC3B,MAAMN,SAAS,EAAE;AACjB,MAAA,IAAII,QAAQ,EAAE;AACZ;AACA;AACA;QACA,MAAMI,WAAW,EAAE;QACnB,MAAMR,SAAS,EAAE;QACjB,MAAMA,SAAS,EAAE;AACnB;AAEA,MAAA,IAAI,IAAI,CAACL,QAAQ,CAACc,WAAW,GAAG,CAAC,EAAE;AACjC,QAAA,IAAI,CAAC3E,WAAW,CAAC4E,OAAO,CAAEC,MAAM,IAAK;UACnC,IAAIA,MAAM,KAAKL,IAAI,EAAE;AACnB,YAAA;AACF;AACAM,UAAAA,cAAc,CAACN,IAAI,EAAEK,MAAM,CAAC;AAC5BC,UAAAA,cAAc,CAACD,MAAM,EAAEL,IAAI,CAAC;AAC9B,SAAC,CAAC;AACJ;AACA,MAAA,IAAI,CAACxE,WAAW,CAACwB,MAAM,CAAC,IAAI,CAACxB,WAAW,CAACuB,OAAO,CAACiD,IAAI,CAAC,EAAE,CAAC,CAAC;MAC1D,OAAO;AACLO,QAAAA,UAAU,EAAER,OAAO;AACnBS,QAAAA,yBAAyB,EAAEC,UAAU,CAAC,CAAC,GAAGT,IAAI,CAACC,UAAU,CAACS,IAAI,EAAE,CAAC,CAAC;QAClEC,OAAO,EAAE,IAAI,CAAC1E;OACf;AACH,KAAC,CAAC,CAAA,CAAA;AAAA;AAAA,EAAA,SAAA,IAAA4C,CAAA,CAAA,IAAA,EAAA,UAAA,CAAA,EAAAC,MAAA;AAGF8B,EAAAA,WAAWA,CAAC;IACVnC,IAAI;IACJS,QAAQ;IACRhC,SAAS;AACT2D,IAAAA;AAMF,GAAC,EAAE;AACD,IAAA,IAAIC,OAAO,GAAG;MAAErC,IAAI;AAAES,MAAAA;KAAU;;AAEhC;IACA,IAAI6B,SAAS,GAAG,CAAC,GAAGrD,WAAW,CAACR,SAAS,CAAC,CAAC;AAC3C,IAAA,KAAK,IAAI;AAAEA,MAAAA,SAAS,EAAE8D,kBAAkB;AAAExE,MAAAA;AAAG,KAAC,IAAI,IAAI,CACnDV,oBAAoB,EAAE;MACvB,IAAIiF,SAAS,CAAChE,OAAO,CAACiE,kBAAkB,CAAC,KAAK,EAAE,EAAE;QAChDxE,EAAE,CAACsE,OAAO,CAAC;AACb;AACF;;AAEA;IACA,IAAIlD,SAAS,GAAG,IAAI,CAAC7B,kBAAkB,CAAC8B,GAAG,CAACX,SAAS,CAAC;AACtD,IAAA,IAAIU,SAAS,EAAE;AACb,MAAA,KAAK,IAAI,CAACpB,EAAE,EAAEgB,EAAE,CAAC,IAAII,SAAS,CAACqD,OAAO,EAAE,EAAE;AACxC,QAAA,IAAItD,KAAK,GAAGkD,QAAQ,CAACxD,IAAI,CAAEM,KAAK,IAAKA,KAAK,CAACH,EAAE,KAAKA,EAAE,CAAC;AACrD,QAAA,IAAIG,KAAK,EAAE;AACTnB,UAAAA,EAAE,CAACmB,KAAK,CAACuD,KAAK,CAAC;AACjB,SAAC;AACD;AACA;AACA;AACA;AACF;AACF;;AAEA;AACA,IAAA,KAAK,IAAI1E,EAAE,IAAI,IAAI,CAACX,mBAAmB,EAAE;MACvCW,EAAE,CAACsE,OAAO,CAAC;AACb;AACF;EAEA,CAACK,iBAAiBA,CAAC3E,EAAqB,EAAE;AACxC,IAAA,IAAI4E,WAAwB,GAAG;MAAE5E,EAAE;AAAE6E,MAAAA,QAAQ,EAAE,KAAK;AAAEC,MAAAA,KAAK,EAAE;KAAM;AACnE,IAAA,IAAI,CAAC7F,aAAa,CAACmB,IAAI,CAACwE,WAAW,CAAC;IACpC,IAAI;AACF;AACA;MACA,MAAM1B,SAAS,EAAE;AAEjB,MAAA,IAAI,CAAC0B,WAAW,CAACC,QAAQ,EAAE;AACzB;AACA;AACA,QAAA,IAAIE,SAAS,GAAG,IAAI,CAAC7F,UAAU;QAC/B6F,SAAS,CAACnB,OAAO,CAAEjE,QAAQ,IAAKA,QAAQ,CAACqF,sBAAsB,EAAE,CAAC;AAClE,QAAA,IAAI,CAAC/F,aAAa,CAAC2E,OAAO,CAAEqB,CAAC,IAAK;UAChC,IAAI;AACFA,YAAAA,CAAC,CAACH,KAAK,GAAGG,CAAC,CAACjF,EAAE,EAAE;WACjB,CAAC,OAAOkF,GAAG,EAAE;AACZC,YAAAA,UAAU,CAAC,YAAY;AACrB,cAAA,MAAMD,GAAG;aACV,EAAE,CAAC,CAAC;AACP;UACAD,CAAC,CAACJ,QAAQ,GAAG,IAAI;AACnB,SAAC,CAAC;QACFE,SAAS,CAACnB,OAAO,CAAEjE,QAAQ,IAAKA,QAAQ,CAACyF,oBAAoB,EAAE,CAAC;AAClE;MACA,OAAOR,WAAW,CAACE,KAAK;AAC1B,KAAC,SAAS;AACR,MAAA,IAAI,CAAC7F,aAAa,CAACuB,MAAM,CAAC,IAAI,CAACvB,aAAa,CAACsB,OAAO,CAACqE,WAAW,CAAC,EAAE,CAAC,CAAC;AACvE;AACF;AACF;AAEA,SAASd,cAAcA,CAACuB,IAAgB,EAAEC,MAAkB,EAAE;AAC5DD,EAAAA,IAAI,CAACjC,QAAQ,CAACmC,MAAM,CAACF,IAAI,CAAChC,IAAI,CAAC,CAACO,OAAO,CAAE4B,MAAM,IAAK;AAClD,IAAA,IAAIC,KAAK,GAAGH,MAAM,CAAC9C,OAAO,CAAC3B,IAAI;AAC7B;AACA;IACC6E,QAAQ,IACPF,MAAM,CAACG,KAAK,CAAEC,KAAK,IAAIF,QAAQ,CAACC,KAAK,CAAEC,KAAK,IAC5CJ,MAAM,CAACG,KAAK,CAAE3E,EAAE,KAAK0E,QAAQ,CAACC,KAAK,CAAE3E,EACzC,CAAC;AACD,IAAA,IAAIyE,KAAK,EAAE;MACTJ,IAAI,CAAC9B,OAAO,CAACjC,GAAG,CAACkE,MAAM,EAAEC,KAAK,CAAC;MAC/BJ,IAAI,CAAC5B,UAAU,CAACnC,GAAG,CAACgE,MAAM,CAACnC,gBAAgB,EAAE,IAAI,CAAC;MAClDmC,MAAM,CAAC/B,OAAO,CAACjC,GAAG,CAACmE,KAAK,EAAED,MAAM,CAAC;MACjCF,MAAM,CAAC7B,UAAU,CAACnC,GAAG,CAAC+D,IAAI,CAAClC,gBAAgB,EAAE,IAAI,CAAC;AACpD;AACF,GAAC,CAAC;AACJ;AAEA,UAAUjC,WAAWA,CAACR,SAAwB,EAAE;AAC9C,EAAA,IAAImF,OAAO,GAAGnF,SAAS,CAACoF,UAAU;AAClC,EAAA,OAAOD,OAAO,EAAE;AACd,IAAA,MAAMA,OAAO;IACbA,OAAO,GAAGA,OAAO,CAACC,UAAU;AAC9B;AACF;;;;"}