{"version":3,"file":"box-shadow.js","sources":["../src/box-shadow.ts"],"sourcesContent":["import { Color, ColorTween } from './color.ts';\nimport Tween from './-private/tween.ts';\nimport linear from './easings/linear.ts';\nimport './element-remove.ts';\n\nconst innerPattern =\n  /^ (\\d+)px (\\d+)px(?: (\\d+)px)?(?: (\\d+)px)?( inset)?(?:, )?/;\n\nexport class BoxShadow {\n  static fromComputedStyle(string: string) {\n    let originalString = string;\n    let shadows: BoxShadow[] = [];\n    if (!string || string === 'none') {\n      return shadows;\n    }\n    while (string.length > 0) {\n      let color = Color.fromComputedStyle(string);\n      string = string.slice(color.sourceString.length);\n      let m = innerPattern.exec(string);\n      if (!m) {\n        throw new Error(`failed to parse computed shadow ${originalString}`);\n      }\n      let x = parseInt(m[1]!);\n      let y = parseInt(m[2]!);\n      let blur = m[3] == null ? 0 : parseInt(m[3]);\n      let spread = m[4] == null ? 0 : parseInt(m[4]);\n      let inset = m[5] != null;\n      shadows.push(new BoxShadow({ color, x, y, blur, spread, inset }));\n      string = string.slice(m[0].length);\n    }\n    return shadows;\n  }\n\n  static fromUserProvidedShadow(string: string) {\n    let testElement = document.createElement('div');\n    testElement.style.display = 'none';\n    testElement.style.boxShadow = string;\n    document.body.appendChild(testElement);\n    let result = this.fromComputedStyle(\n      getComputedStyle(testElement).boxShadow!,\n    );\n    testElement.remove();\n    return result;\n  }\n\n  readonly color: Color;\n  readonly x: number;\n  readonly y: number;\n  readonly blur: number;\n  readonly spread: number;\n  readonly inset: boolean;\n\n  constructor({\n    color,\n    x,\n    y,\n    blur,\n    spread,\n    inset,\n  }: {\n    color: Color;\n    x: number;\n    y: number;\n    blur: number;\n    spread: number;\n    inset: boolean;\n  }) {\n    this.color = color;\n    this.x = x;\n    this.y = y;\n    this.blur = blur;\n    this.spread = spread;\n    this.inset = inset;\n  }\n\n  toString() {\n    return `${this.inset ? 'inset ' : ''}${this.x}px ${this.y}px ${\n      this.blur\n    }px ${this.spread}px ${this.color.toString()}`;\n  }\n}\n\nfunction emptyShadowOfType(otherShadow: BoxShadow) {\n  return new BoxShadow({\n    color: Color.fromComputedStyle('rgba(0, 0, 0, 0)'),\n    blur: 0,\n    spread: 0,\n    x: 0,\n    y: 0,\n    inset: otherShadow.inset,\n  });\n}\n\nexport class BoxShadowTween {\n  private shadowTweens: OneShadowTween[];\n\n  constructor(\n    fromShadows: BoxShadow[],\n    toShadows: BoxShadow[],\n    duration: number,\n    easing: (time: number) => number = linear,\n  ) {\n    let shadowCount = Math.max(fromShadows.length, toShadows.length);\n    if (fromShadows.length < shadowCount) {\n      fromShadows = fromShadows.slice();\n      while (fromShadows.length < shadowCount) {\n        fromShadows.push(emptyShadowOfType(toShadows[fromShadows.length]!));\n      }\n    }\n    if (toShadows.length < shadowCount) {\n      toShadows = toShadows.slice();\n      while (toShadows.length < shadowCount) {\n        toShadows.push(emptyShadowOfType(fromShadows[toShadows.length]!));\n      }\n    }\n\n    this.shadowTweens = fromShadows.map(\n      (fromShadow, index) =>\n        new OneShadowTween(fromShadow, toShadows[index]!, duration, easing),\n    );\n  }\n  get currentValue() {\n    return this.shadowTweens.map((tween) => tween.currentValue);\n  }\n  get done() {\n    return this.shadowTweens.every((tween) => tween.done);\n  }\n}\n\nclass OneShadowTween {\n  private colorTween: ColorTween;\n  private xTween: Tween;\n  private yTween: Tween;\n  private blurTween: Tween;\n  private spreadTween: Tween;\n  private inset: boolean;\n\n  constructor(\n    fromShadow: BoxShadow,\n    toShadow: BoxShadow,\n    duration: number,\n    easing: (time: number) => number,\n  ) {\n    this.colorTween = new ColorTween(\n      fromShadow.color,\n      toShadow.color,\n      duration,\n      easing,\n    );\n    this.xTween = new Tween(fromShadow.x, toShadow.x, duration, easing);\n    this.yTween = new Tween(fromShadow.y, toShadow.y, duration, easing);\n    this.blurTween = new Tween(\n      fromShadow.blur,\n      toShadow.blur,\n      duration,\n      easing,\n    );\n    this.spreadTween = new Tween(\n      fromShadow.spread,\n      toShadow.spread,\n      duration,\n      easing,\n    );\n    this.inset = fromShadow.inset;\n  }\n\n  get currentValue() {\n    return new BoxShadow({\n      x: this.xTween.currentValue,\n      y: this.yTween.currentValue,\n      blur: this.blurTween.currentValue,\n      spread: this.spreadTween.currentValue,\n      inset: this.inset,\n      color: this.colorTween.currentValue,\n    });\n  }\n\n  get done() {\n    return [\n      this.colorTween,\n      this.xTween,\n      this.yTween,\n      this.blurTween,\n      this.spreadTween,\n    ].every((tween) => tween.done);\n  }\n}\n"],"names":["innerPattern","BoxShadow","fromComputedStyle","string","originalString","shadows","length","color","Color","slice","sourceString","m","exec","Error","x","parseInt","y","blur","spread","inset","push","fromUserProvidedShadow","testElement","document","createElement","style","display","boxShadow","body","appendChild","result","getComputedStyle","remove","constructor","_defineProperty","toString","emptyShadowOfType","otherShadow","BoxShadowTween","fromShadows","toShadows","duration","easing","linear","shadowCount","Math","max","shadowTweens","map","fromShadow","index","OneShadowTween","currentValue","tween","done","every","toShadow","colorTween","ColorTween","xTween","Tween","yTween","blurTween","spreadTween"],"mappings":"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"}