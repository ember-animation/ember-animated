{"version":3,"file":"adjust-css.js","sources":["../../src/motions/adjust-css.ts"],"sourcesContent":["import Motion, { type BaseOptions } from '../-private/motion.ts';\nimport Tween, { type TweenLike } from '../-private/tween.ts';\nimport { rAF } from '../-private/concurrency-helpers.ts';\nimport type Sprite from '../-private/sprite.ts';\nimport { type CopiedCSS } from '../-private/sprite.ts';\n\n/**\n  Animates the change in style of a Sprite. Applies to CSS properties that are a unit and a number (font-size, letter spacing, etc.).\n\n  @function adjustCSS\n  @export default\n  @param {String} propertyName The CSS property to adjust\n  @param {Sprite} sprite The sprite we're adjusting\n  @param {Object} options\n  @return {Motion}\n*/\nexport default function adjustCSS(\n  propertyName: keyof CopiedCSS,\n  sprite: Sprite,\n  opts: Partial<AdjustCSSOptions> = {},\n) {\n  return new AdjustCSS(propertyName, sprite, opts).run();\n}\n\nadjustCSS.property = function (propertyName: keyof CopiedCSS) {\n  return this.bind(null, propertyName);\n};\n\ninterface AdjustCSSOptions extends BaseOptions {\n  easing: (time: number) => number;\n}\n\nexport class AdjustCSS extends Motion<AdjustCSSOptions> {\n  prior: AdjustCSS | null | undefined = null;\n  tween: TweenLike | null = null;\n\n  constructor(\n    readonly propertyName: keyof CopiedCSS,\n    sprite: Sprite,\n    opts: Partial<AdjustCSSOptions> = {},\n  ) {\n    super(sprite, opts);\n  }\n\n  interrupted(motions: Motion[]) {\n    this.prior = motions.find(\n      (m) => m instanceof AdjustCSS && m.propertyName === this.propertyName,\n      // SAFETY: We just checked that it's an instance of AdjustCSS\n    ) as AdjustCSS | undefined;\n  }\n\n  *animate() {\n    let { value: finalValue, unit } = this._splitUnit(\n      this.sprite.finalComputedStyle![this.propertyName],\n    );\n    if (this.prior) {\n      let prior: AdjustCSS = this.prior;\n      prior.assertHasTween();\n\n      this.tween = new Tween(\n        0,\n        finalValue - prior.tween.finalValue,\n        this.duration,\n        this.opts.easing,\n      ).plus(prior.tween);\n    } else {\n      this.sprite.assertHasInitialBounds();\n      this.tween = new Tween(\n        this._splitUnit(\n          this.sprite.initialComputedStyle[this.propertyName],\n        ).value,\n        finalValue,\n        this.duration,\n        this.opts.easing,\n      );\n    }\n    while (!this.tween.done) {\n      this.sprite.applyStyles({\n        [this.propertyName]: `${this.tween.currentValue}${unit}`,\n      });\n      yield rAF();\n    }\n  }\n\n  _splitUnit(s: string) {\n    if (this.propertyName === 'letter-spacing' && s === 'normal') {\n      return {\n        value: 0,\n        unit: 'px',\n      };\n    }\n    let m = /(\\d+(?:\\.\\d+)?)(\\w+)/.exec(s);\n    if (!m) {\n      throw new Error(\n        `Unable to use adjustCSS for property ${this.propertyName} which has value ${s}`,\n      );\n    }\n    return {\n      value: parseFloat(m[1]!),\n      unit: m[2] || '',\n    };\n  }\n\n  assertHasTween(): asserts this is AdjustCSSWithTween {\n    if (!this.tween) {\n      throw new Error(`motion does not have tween`);\n    }\n  }\n}\n\ninterface AdjustCSSWithTween extends AdjustCSS {\n  tween: TweenLike;\n}\n"],"names":["adjustCSS","propertyName","sprite","opts","AdjustCSS","run","property","bind","Motion","constructor","_defineProperty","interrupted","motions","prior","find","m","animate","value","finalValue","unit","_splitUnit","finalComputedStyle","assertHasTween","tween","Tween","duration","easing","plus","assertHasInitialBounds","initialComputedStyle","done","applyStyles","currentValue","rAF","s","exec","Error","parseFloat"],"mappings":"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"}