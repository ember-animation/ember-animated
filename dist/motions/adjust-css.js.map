{"version":3,"file":"adjust-css.js","sources":["../../src/motions/adjust-css.ts"],"sourcesContent":["import Motion, { type BaseOptions } from '../-private/motion.ts';\nimport Tween, { type TweenLike } from '../-private/tween.ts';\nimport { rAF } from '../-private/concurrency-helpers.ts';\nimport type Sprite from '../-private/sprite.ts';\nimport { type CopiedCSS } from '../-private/sprite.ts';\n\n/**\n  Animates the change in style of a Sprite. Applies to CSS properties that are a unit and a number (font-size, letter spacing, etc.).\n\n  @function adjustCSS\n  @export default\n  @param {String} propertyName The CSS property to adjust\n  @param {Sprite} sprite The sprite we're adjusting\n  @param {Object} options\n  @return {Motion}\n*/\nexport default function adjustCSS(\n  propertyName: keyof CopiedCSS,\n  sprite: Sprite,\n  opts: Partial<AdjustCSSOptions> = {},\n) {\n  return new AdjustCSS(propertyName, sprite, opts).run();\n}\n\nadjustCSS.property = function (propertyName: keyof CopiedCSS) {\n  return this.bind(null, propertyName);\n};\n\ninterface AdjustCSSOptions extends BaseOptions {\n  easing: (time: number) => number;\n}\n\nexport class AdjustCSS extends Motion<AdjustCSSOptions> {\n  prior: AdjustCSS | null | undefined = null;\n  tween: TweenLike | null = null;\n\n  constructor(\n    readonly propertyName: keyof CopiedCSS,\n    sprite: Sprite,\n    opts: Partial<AdjustCSSOptions> = {},\n  ) {\n    super(sprite, opts);\n  }\n\n  interrupted(motions: Motion[]) {\n    this.prior = motions.find(\n      (m) => m instanceof AdjustCSS && m.propertyName === this.propertyName,\n      // SAFETY: We just checked that it's an instance of AdjustCSS\n    ) as AdjustCSS | undefined;\n  }\n\n  *animate() {\n    let { value: finalValue, unit } = this._splitUnit(\n      this.sprite.finalComputedStyle![this.propertyName],\n    );\n    if (this.prior) {\n      let prior: AdjustCSS = this.prior;\n      prior.assertHasTween();\n\n      this.tween = new Tween(\n        0,\n        finalValue - prior.tween.finalValue,\n        this.duration,\n        this.opts.easing,\n      ).plus(prior.tween);\n    } else {\n      this.sprite.assertHasInitialBounds();\n      this.tween = new Tween(\n        this._splitUnit(\n          this.sprite.initialComputedStyle[this.propertyName],\n        ).value,\n        finalValue,\n        this.duration,\n        this.opts.easing,\n      );\n    }\n    while (!this.tween.done) {\n      this.sprite.applyStyles({\n        [this.propertyName]: `${this.tween.currentValue}${unit}`,\n      });\n      yield rAF();\n    }\n  }\n\n  _splitUnit(s: string) {\n    if (this.propertyName === 'letter-spacing' && s === 'normal') {\n      return {\n        value: 0,\n        unit: 'px',\n      };\n    }\n    let m = /(\\d+(?:\\.\\d+)?)(\\w+)/.exec(s);\n    if (!m) {\n      throw new Error(\n        `Unable to use adjustCSS for property ${this.propertyName} which has value ${s}`,\n      );\n    }\n    return {\n      value: parseFloat(m[1]!),\n      unit: m[2] || '',\n    };\n  }\n\n  assertHasTween(): asserts this is AdjustCSSWithTween {\n    if (!this.tween) {\n      throw new Error(`motion does not have tween`);\n    }\n  }\n}\n\ninterface AdjustCSSWithTween extends AdjustCSS {\n  tween: TweenLike;\n}\n"],"names":["adjustCSS","propertyName","sprite","opts","AdjustCSS","run","property","bind","Motion","prior","tween","constructor","interrupted","motions","find","m","animate","value","finalValue","unit","_splitUnit","finalComputedStyle","assertHasTween","Tween","duration","easing","plus","assertHasInitialBounds","initialComputedStyle","done","applyStyles","currentValue","rAF","s","exec","Error","parseFloat"],"mappings":"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"}