{"version":3,"file":"opacity.js","sources":["../../src/motions/opacity.ts"],"sourcesContent":["import { rAF } from '../-private/concurrency-helpers.ts';\nimport Motion, { type BaseOptions } from '../-private/motion.ts';\nimport type Sprite from '../-private/sprite.ts';\nimport Tween, { type TweenLike } from '../-private/tween.ts';\nimport linear from '../easings/linear.ts';\n\nexport default function opacity(\n  sprite: Sprite,\n  opts: Partial<OpacityOptions> = {},\n) {\n  return new Opacity(sprite, opts).run();\n}\n\n/**\n  Animates in a sprite from 0% to 100% opacity.\n\n  ```js\n  for (let sprite of insertedSprites) {\n    fadeIn(sprite)\n  }\n  ```\n\n  @function fadeIn\n  @param {Sprite} sprite\n  @return {Motion}\n*/\nexport function fadeIn(sprite: Sprite, opts: Partial<OpacityOptions> = {}) {\n  let innerOpts = Object.assign(\n    {\n      to: 1,\n    },\n    opts,\n  );\n  return opacity(sprite, innerOpts);\n}\n\n/**\n  Animates out a sprite from 100% to 0% opacity.\n\n  ```js\n  for (let sprite of removedSprites) {\n    fadeOut(sprite)\n  }\n  ```\n\n  @function fadeOut\n  @param {Sprite} sprite\n  @return {Motion}\n*/\nexport function fadeOut(sprite: Sprite, opts: Partial<OpacityOptions> = {}) {\n  let innerOpts = Object.assign(\n    {\n      to: 0,\n    },\n    opts,\n  );\n  return opacity(sprite, innerOpts);\n}\n\ninterface OpacityOptions extends BaseOptions {\n  from: number;\n  to: number;\n  easing: (time: number) => number;\n}\n\nexport class Opacity extends Motion<OpacityOptions> {\n  prior: Opacity | null | undefined = null;\n  tween: TweenLike | null = null;\n\n  interrupted(motions: Motion[]) {\n    // SAFTEY: We just checked the types\n    this.prior = motions.find((m) => m instanceof this.constructor) as\n      | Opacity\n      | undefined;\n  }\n\n  /*\n    This motion defines \"duration\" as the time it takes to go all the\n    way from 0% to 100% (or 100% to 0%). So motions between values\n    closer than that take proportionately less time.\n  */\n  *animate() {\n    let { sprite, duration, opts } = this;\n    let to =\n      opts.to != null\n        ? opts.to\n        : sprite.finalComputedStyle != null\n          ? parseFloat(sprite.finalComputedStyle.opacity)\n          : 1;\n    let from;\n\n    if (this.prior) {\n      let prior: Opacity = this.prior;\n      prior.assertHasTween();\n\n      // when we're interrupting a prior opacity motion, we always\n      // take its value as our starting point, regardless of whether\n      // the user set a \"from\" option.\n      from = prior.tween.currentValue;\n    } else {\n      // otherwise we start at the user-provided option, the sprite's\n      // found initial opacity, or zero, in that priority order.\n      from =\n        opts.from != null\n          ? opts.from\n          : sprite.initialComputedStyle != null\n            ? parseFloat(sprite.initialComputedStyle.opacity)\n            : 0;\n    }\n\n    let proportionalDuration = Math.abs(from - to) * duration;\n    this.tween = new Tween(\n      from,\n      to,\n      proportionalDuration,\n      this.opts.easing !== undefined ? this.opts.easing : linear,\n    );\n\n    while (!this.tween.done) {\n      sprite.applyStyles({\n        opacity: `${this.tween.currentValue}`,\n      });\n      yield rAF();\n    }\n  }\n\n  assertHasTween(): asserts this is OpacityWithTween {\n    if (!this.tween) {\n      throw new Error(`motion does not have tween`);\n    }\n  }\n}\n\ninterface OpacityWithTween extends Opacity {\n  tween: TweenLike;\n}\n"],"names":["opacity","sprite","opts","Opacity","run","fadeIn","innerOpts","Object","assign","to","fadeOut","Motion","prior","tween","interrupted","motions","find","m","constructor","animate","duration","finalComputedStyle","parseFloat","from","assertHasTween","currentValue","initialComputedStyle","proportionalDuration","Math","abs","Tween","easing","undefined","linear","done","applyStyles","rAF","Error"],"mappings":"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"}