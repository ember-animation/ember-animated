{"version":3,"file":"scale.js","sources":["../../src/motions/scale.ts"],"sourcesContent":["import { rAF } from '../-private/concurrency-helpers.ts';\nimport Motion, { type BaseOptions } from '../-private/motion.ts';\nimport type Sprite from '../-private/sprite.ts';\nimport Tween, { type TweenLike } from '../-private/tween.ts';\n\n/**\n  Smoothly scales _sprite_ from its the initial size to its final size.\n\n  _sprite_ must have both `initialBounds` and `finalBounds` set.\n\n  ```js\n  for (let sprite of insertedSprites) {\n    sprite.startAtSprite(beacons['source']);\n    scale(sprite)\n  }\n  ```\n\n  @function scale\n  @export default\n  @param {Sprite} sprite\n  @return {Motion}\n*/\nexport default function scale(\n  sprite: Sprite,\n  opts: Partial<ScaleOptions> = {},\n) {\n  return new Scale(sprite, opts).run();\n}\n\ninterface ScaleOptions extends BaseOptions {\n  easing: (time: number) => number;\n}\n\nexport class Scale extends Motion<ScaleOptions> {\n  widthTween: TweenLike | null = null;\n  heightTween: TweenLike | null = null;\n\n  *animate() {\n    this.sprite.assertHasInitialBounds();\n    this.sprite.assertHasFinalBounds();\n    let sprite = this.sprite;\n\n    let duration = this.duration;\n\n    let initialWidthFactor, initialHeightFactor;\n\n    if (sprite.originalInitialBounds) {\n      // the sprite is going to start at its own native initial size,\n      // which may differ from the initialBounds.width &\n      // initialBounds.height that have been set for it. This\n      // compensates with an initial scaling.\n      initialWidthFactor =\n        sprite.initialBounds.width / sprite.originalInitialBounds.width;\n      initialHeightFactor =\n        sprite.initialBounds.height / sprite.originalInitialBounds.height;\n    } else {\n      // the sprite is going to start at its own native final size\n      initialWidthFactor =\n        sprite.initialBounds.width / sprite.originalFinalBounds.width;\n      initialHeightFactor =\n        sprite.initialBounds.height / sprite.originalFinalBounds.height;\n    }\n\n    let widthFactor = sprite.finalBounds.width / sprite.initialBounds.width;\n    let heightFactor = sprite.finalBounds.height / sprite.initialBounds.height;\n\n    this.widthTween = new Tween(\n      sprite.transform.a * initialWidthFactor,\n      sprite.transform.a * initialWidthFactor * widthFactor,\n      duration,\n      this.opts.easing,\n    );\n    this.heightTween = new Tween(\n      sprite.transform.d * initialHeightFactor,\n      sprite.transform.d * initialHeightFactor * heightFactor,\n      duration,\n      this.opts.easing,\n    );\n\n    while (!this.widthTween.done || !this.heightTween.done) {\n      sprite.scale(\n        this.widthTween.currentValue / sprite.transform.a,\n        this.heightTween.currentValue / sprite.transform.d,\n      );\n      yield rAF();\n    }\n  }\n}\n"],"names":["scale","sprite","opts","Scale","run","Motion","widthTween","heightTween","animate","assertHasInitialBounds","assertHasFinalBounds","duration","initialWidthFactor","initialHeightFactor","originalInitialBounds","initialBounds","width","height","originalFinalBounds","widthFactor","finalBounds","heightFactor","Tween","transform","a","easing","d","done","currentValue","rAF"],"mappings":";;;;AAKA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACe,SAASA,KAAKA,CAC3BC,MAAc,EACdC,IAA2B,GAAG,EAAE,EAChC;EACA,OAAO,IAAIC,KAAK,CAACF,MAAM,EAAEC,IAAI,CAAC,CAACE,GAAG,EAAE;AACtC;AAMO,MAAMD,KAAK,SAASE,MAAM,CAAe;AAC9CC,EAAAA,UAAU,GAAqB,IAAI;AACnCC,EAAAA,WAAW,GAAqB,IAAI;EAEpC,CAACC,OAAOA,GAAG;AACT,IAAA,IAAI,CAACP,MAAM,CAACQ,sBAAsB,EAAE;AACpC,IAAA,IAAI,CAACR,MAAM,CAACS,oBAAoB,EAAE;AAClC,IAAA,IAAIT,MAAM,GAAG,IAAI,CAACA,MAAM;AAExB,IAAA,IAAIU,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAE5B,IAAIC,kBAAkB,EAAEC,mBAAmB;IAE3C,IAAIZ,MAAM,CAACa,qBAAqB,EAAE;AAChC;AACA;AACA;AACA;MACAF,kBAAkB,GAChBX,MAAM,CAACc,aAAa,CAACC,KAAK,GAAGf,MAAM,CAACa,qBAAqB,CAACE,KAAK;MACjEH,mBAAmB,GACjBZ,MAAM,CAACc,aAAa,CAACE,MAAM,GAAGhB,MAAM,CAACa,qBAAqB,CAACG,MAAM;AACrE,KAAC,MAAM;AACL;MACAL,kBAAkB,GAChBX,MAAM,CAACc,aAAa,CAACC,KAAK,GAAGf,MAAM,CAACiB,mBAAmB,CAACF,KAAK;MAC/DH,mBAAmB,GACjBZ,MAAM,CAACc,aAAa,CAACE,MAAM,GAAGhB,MAAM,CAACiB,mBAAmB,CAACD,MAAM;AACnE;AAEA,IAAA,IAAIE,WAAW,GAAGlB,MAAM,CAACmB,WAAW,CAACJ,KAAK,GAAGf,MAAM,CAACc,aAAa,CAACC,KAAK;AACvE,IAAA,IAAIK,YAAY,GAAGpB,MAAM,CAACmB,WAAW,CAACH,MAAM,GAAGhB,MAAM,CAACc,aAAa,CAACE,MAAM;AAE1E,IAAA,IAAI,CAACX,UAAU,GAAG,IAAIgB,KAAK,CACzBrB,MAAM,CAACsB,SAAS,CAACC,CAAC,GAAGZ,kBAAkB,EACvCX,MAAM,CAACsB,SAAS,CAACC,CAAC,GAAGZ,kBAAkB,GAAGO,WAAW,EACrDR,QAAQ,EACR,IAAI,CAACT,IAAI,CAACuB,MACZ,CAAC;AACD,IAAA,IAAI,CAAClB,WAAW,GAAG,IAAIe,KAAK,CAC1BrB,MAAM,CAACsB,SAAS,CAACG,CAAC,GAAGb,mBAAmB,EACxCZ,MAAM,CAACsB,SAAS,CAACG,CAAC,GAAGb,mBAAmB,GAAGQ,YAAY,EACvDV,QAAQ,EACR,IAAI,CAACT,IAAI,CAACuB,MACZ,CAAC;AAED,IAAA,OAAO,CAAC,IAAI,CAACnB,UAAU,CAACqB,IAAI,IAAI,CAAC,IAAI,CAACpB,WAAW,CAACoB,IAAI,EAAE;MACtD1B,MAAM,CAACD,KAAK,CACV,IAAI,CAACM,UAAU,CAACsB,YAAY,GAAG3B,MAAM,CAACsB,SAAS,CAACC,CAAC,EACjD,IAAI,CAACjB,WAAW,CAACqB,YAAY,GAAG3B,MAAM,CAACsB,SAAS,CAACG,CACnD,CAAC;MACD,MAAMG,GAAG,EAAE;AACb;AACF;AACF;;;;"}