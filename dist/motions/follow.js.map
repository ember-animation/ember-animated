{"version":3,"file":"follow.js","sources":["../../src/motions/follow.ts"],"sourcesContent":["import { Move, type MoveOptions } from './move.ts';\nimport { rAF } from '../-private/concurrency-helpers.ts';\nimport type Sprite from '../-private/sprite.ts';\nimport Tween from '../-private/tween.ts';\n\nexport default function follow(\n  sprite: Sprite,\n  opts: Partial<FollowOptions> = {},\n) {\n  return new Follow(sprite, opts).run();\n}\n\ninterface FollowOptions extends MoveOptions {\n  source: Move;\n}\n\n// Because we inherit from Move, if we are interrupted by a Move the\n// new Move will still preserve our momentum.\nexport class Follow extends Move<FollowOptions> {\n  readonly source: Move;\n\n  constructor(sprite: Sprite, opts: Partial<MoveOptions> = {}) {\n    super(sprite, opts);\n    if (!(this.opts.source instanceof Move)) {\n      throw new Error('Follow requires a `source` Move to follow');\n    }\n    this.source = this.opts.source;\n  }\n\n  *animate() {\n    this.source.assertHasTweens();\n    let source = this.source;\n\n    let sprite = this.sprite;\n    let transformOffsetX = sprite.transform.tx - source.sprite.transform.tx;\n    let transformOffsetY = sprite.transform.ty - source.sprite.transform.ty;\n    this.xTween = new Tween(transformOffsetX, transformOffsetX, 0).plus(\n      source.xTween,\n    );\n    this.yTween = new Tween(transformOffsetY, transformOffsetY, 0).plus(\n      source.yTween,\n    );\n\n    // We don't need this to make our own animation work correctly,\n    // but since we are a subclass of Move, and every Move requires\n    // its sprite to have both initial and final bounds, we need to\n    // this to remain protocol-compatible across interruptions.\n\n    this.sprite.endRelativeTo(source.sprite);\n\n    while (!this.xTween.done || !this.yTween.done) {\n      sprite.translate(\n        this.xTween.currentValue - sprite.transform.tx,\n        this.yTween.currentValue - sprite.transform.ty,\n      );\n      yield rAF();\n    }\n  }\n}\n"],"names":["follow","sprite","opts","Follow","run","Move","source","constructor","Error","animate","assertHasTweens","transformOffsetX","transform","tx","transformOffsetY","ty","xTween","Tween","plus","yTween","endRelativeTo","done","translate","currentValue","rAF"],"mappings":";;;;AAKe,SAASA,MAAMA,CAC5BC,MAAc,EACdC,IAA4B,GAAG,EAAE,EACjC;EACA,OAAO,IAAIC,MAAM,CAACF,MAAM,EAAEC,IAAI,CAAC,CAACE,GAAG,EAAE;AACvC;AAMA;AACA;AACO,MAAMD,MAAM,SAASE,IAAI,CAAgB;EACrCC,MAAM;AAEfC,EAAAA,WAAWA,CAACN,MAAc,EAAEC,IAA0B,GAAG,EAAE,EAAE;AAC3D,IAAA,KAAK,CAACD,MAAM,EAAEC,IAAI,CAAC;IACnB,IAAI,EAAE,IAAI,CAACA,IAAI,CAACI,MAAM,YAAYD,IAAI,CAAC,EAAE;AACvC,MAAA,MAAM,IAAIG,KAAK,CAAC,2CAA2C,CAAC;AAC9D;AACA,IAAA,IAAI,CAACF,MAAM,GAAG,IAAI,CAACJ,IAAI,CAACI,MAAM;AAChC;EAEA,CAACG,OAAOA,GAAG;AACT,IAAA,IAAI,CAACH,MAAM,CAACI,eAAe,EAAE;AAC7B,IAAA,IAAIJ,MAAM,GAAG,IAAI,CAACA,MAAM;AAExB,IAAA,IAAIL,MAAM,GAAG,IAAI,CAACA,MAAM;AACxB,IAAA,IAAIU,gBAAgB,GAAGV,MAAM,CAACW,SAAS,CAACC,EAAE,GAAGP,MAAM,CAACL,MAAM,CAACW,SAAS,CAACC,EAAE;AACvE,IAAA,IAAIC,gBAAgB,GAAGb,MAAM,CAACW,SAAS,CAACG,EAAE,GAAGT,MAAM,CAACL,MAAM,CAACW,SAAS,CAACG,EAAE;AACvE,IAAA,IAAI,CAACC,MAAM,GAAG,IAAIC,KAAK,CAACN,gBAAgB,EAAEA,gBAAgB,EAAE,CAAC,CAAC,CAACO,IAAI,CACjEZ,MAAM,CAACU,MACT,CAAC;AACD,IAAA,IAAI,CAACG,MAAM,GAAG,IAAIF,KAAK,CAACH,gBAAgB,EAAEA,gBAAgB,EAAE,CAAC,CAAC,CAACI,IAAI,CACjEZ,MAAM,CAACa,MACT,CAAC;;AAED;AACA;AACA;AACA;;IAEA,IAAI,CAAClB,MAAM,CAACmB,aAAa,CAACd,MAAM,CAACL,MAAM,CAAC;AAExC,IAAA,OAAO,CAAC,IAAI,CAACe,MAAM,CAACK,IAAI,IAAI,CAAC,IAAI,CAACF,MAAM,CAACE,IAAI,EAAE;MAC7CpB,MAAM,CAACqB,SAAS,CACd,IAAI,CAACN,MAAM,CAACO,YAAY,GAAGtB,MAAM,CAACW,SAAS,CAACC,EAAE,EAC9C,IAAI,CAACM,MAAM,CAACI,YAAY,GAAGtB,MAAM,CAACW,SAAS,CAACG,EAC9C,CAAC;MACD,MAAMS,GAAG,EAAE;AACb;AACF;AACF;;;;"}