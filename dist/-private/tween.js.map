{"version":3,"file":"tween.js","sources":["../../src/-private/tween.ts"],"sourcesContent":["import { rAF, frameState, clock } from './concurrency-helpers.ts';\nimport { easeInAndOut } from '../easings/cosine.ts';\nimport { getOrCreate } from './singleton.ts';\n\nconst currentCurves = getOrCreate<MotionCurve[]>('tween', () => []);\n\nexport interface TweenLike {\n  currentValue: number;\n  finalValue: number;\n  done: boolean;\n}\n\n/*\n  A Tween automatically recalculates on demand at most once per\n  animation frame. As long as you're using the rAF helper from\n  './concurrency-helpers', it will always be fresh. When many\n  concurrent Tweens are running over the same duration at the same\n  time, we can avoid a lot of duplicate work and keep them in sync.\n*/\n\nexport default class Tween implements TweenLike {\n  private curve: MotionCurve;\n  private diff: number;\n\n  constructor(\n    readonly initialValue: number,\n    readonly finalValue: number,\n    duration: number,\n    easing = easeInAndOut,\n  ) {\n    if (typeof easing !== 'function') {\n      throw new Error('Tried to make a Tween with an invalid easing function');\n    }\n    this.curve = MotionCurve.findOrCreate(duration, easing);\n    this.diff = finalValue - initialValue;\n  }\n  get currentValue() {\n    return this.initialValue + this.diff * this.curve.spaceProgress;\n  }\n  get done() {\n    return this.curve.done;\n  }\n  plus(otherTween: TweenLike) {\n    return new DerivedTween(\n      [this, otherTween],\n      (a: TweenLike, b: TweenLike) => a.currentValue + b.currentValue,\n    );\n  }\n}\n\nexport class DerivedTween implements TweenLike {\n  private _finalValue: number | null = null;\n  private inputs: TweenLike[];\n\n  constructor(\n    inputs: TweenLike[],\n    private combinator: (...inputs: TweenLike[]) => number,\n  ) {\n    this._finalValue = null;\n    this.inputs = inputs.map((t) => {\n      if (t.done) {\n        // If one of our inputs has already finished, we can just keep its final\n        // value around and drop the reference to the original Tween. This\n        // prevents long chains of derived tweens from growing without bound\n        // during continuous animations.\n        return new Tween(t.currentValue, t.currentValue, 0);\n      } else {\n        return t;\n      }\n    });\n  }\n  get finalValue() {\n    if (this._finalValue == null) {\n      let accum = 0;\n      for (const input of this.inputs) {\n        accum += input.finalValue;\n      }\n      this._finalValue = accum;\n    }\n    return this._finalValue;\n  }\n  get currentValue() {\n    return this.combinator(...this.inputs);\n  }\n  get done(): boolean {\n    return !this.inputs.find((t) => !t.done);\n  }\n}\n\nclass MotionCurve {\n  // we share motion curves among all concurrent motions that have the\n  // same duration that start in the same animation frame.\n  static findOrCreate(duration: number, easing: (t: number) => number) {\n    let shared = currentCurves.find(\n      (c) => c.duration === duration && c.easing === easing,\n    );\n    if (shared) {\n      return shared;\n    }\n    let created = new this(duration, easing);\n    currentCurves.push(created);\n    rAF().then(() => {\n      currentCurves.splice(currentCurves.indexOf(created), 1);\n    });\n    return created;\n  }\n\n  private startTime: number;\n  private _doneFrames = 0;\n  private _lastTick: number | undefined;\n  private _runTime: number | undefined;\n  private _timeProgress: number | undefined;\n  private _spaceProgress: number | undefined;\n\n  constructor(\n    readonly duration: number,\n    private easing: (t: number) => number,\n  ) {\n    this.startTime = clock.now();\n    this._tick();\n  }\n  _tick() {\n    if (this._lastTick !== frameState.currentFrameClock) {\n      this._lastTick = frameState.currentFrameClock;\n      this._runTime = clock.now() - this.startTime;\n      this._timeProgress =\n        this.duration === 0 ? 1 : Math.min(this._runTime / this.duration, 1);\n      this._spaceProgress = this.easing(this._timeProgress);\n      if (this._timeProgress >= 1) {\n        this._doneFrames++;\n      }\n    }\n  }\n  get runTime() {\n    this._tick();\n    return this._runTime!;\n  }\n  get timeProgress() {\n    this._tick();\n    return this._timeProgress!;\n  }\n  get spaceProgress() {\n    this._tick();\n    return this._spaceProgress!;\n  }\n\n  // Tweens are not considered done until they have been done for more\n  // than one frame. This allows you to write animations like:\n  //\n  //     while (!tween.done) {\n  //       doSomethingWith(tween.currentValue);\n  //       yield rAF();\n  //     }\n  //\n  // while being sure that doSomethingWith will actually be called at\n  // least once with the final value. The alternative ways to\n  // accomplish that:\n  //\n  //     while (!tween.done) {\n  //       yield rAF(); // <-- may cause flicker\n  //       doSomethingWith(tween.currentValue);\n  //      }\n  //\n  //  or\n  //\n  //     while (!tween.done) {\n  //       doSomethingWith(tween.currentValue);\n  //       yield rAF();\n  //     }\n  //     doSomethingWith(tween.currentValue);\n  //\n  //  Either allow flicker or require animation authors to remember to\n  //  repeat themselves.\n  get done() {\n    this._tick();\n    return this._doneFrames > 1;\n  }\n}\n"],"names":["currentCurves","getOrCreate","Tween","curve","diff","constructor","initialValue","finalValue","duration","easing","easeInAndOut","Error","MotionCurve","findOrCreate","currentValue","spaceProgress","done","plus","otherTween","DerivedTween","a","b","_finalValue","inputs","combinator","map","t","accum","input","find","shared","c","created","push","rAF","then","splice","indexOf","startTime","_doneFrames","_lastTick","_runTime","_timeProgress","_spaceProgress","clock","now","_tick","frameState","currentFrameClock","Math","min","runTime","timeProgress"],"mappings":"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"}