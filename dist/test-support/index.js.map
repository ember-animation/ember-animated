{"version":3,"file":"index.js","sources":["../../src/test-support/index.js"],"sourcesContent":["import { importSync } from '@embroider/macros';\nimport { run } from '@ember/runloop';\nimport { Color } from '../color.ts';\nimport { relativeBounds } from '../-private/bounds.ts';\nimport { cumulativeTransform } from '../-private/transform.ts';\nimport TimeControl from './time-control.js';\n\nexport { TimeControl };\nexport { default as MotionTester } from './motion-tester.js';\n\n// Re-export to ensure \"instanceof\" works properly within MotionTester.\n// Importing from 'ember-animated' would happen from different entry-point\n// when done from the app or from the test. Hence, we need re-export.\n// We should remove below re-exports once ember-auto-import gets fixed,\n// so we would have single entry point for app and tests.\n// Link to track status: https://github.com/ef4/ember-auto-import/issues/503\nexport { default as Sprite } from '../-private/sprite.ts';\nexport { default as Motion } from '../-private/motion.ts';\nexport { AdjustColor } from '../motions/adjust-color.ts';\nexport { Move } from '../motions/move.ts';\n\nexport function animationsSettled() {\n  let idle;\n  let { getContext } = importSync('@ember/test-helpers');\n  let { owner } = getContext();\n  run(() => {\n    idle = owner.lookup('service:-ea-motion').get('waitUntilIdle').perform();\n  });\n  return Promise.resolve(idle);\n}\n\n// This is like getBoundingClientRect, but it is relative to the\n// #ember-testing container, so your answers don't change just because\n// the container itself is being pushed around by QUnit.\nexport function bounds(element) {\n  return relativeBounds(\n    element.getBoundingClientRect(),\n    document.querySelector('#ember-testing').getBoundingClientRect(),\n  );\n}\n\n// This gives you the linear part of the cumulative transformations\n// applies to the element, which together form a 2x2 matrix that\n// determines its shape.\nexport function shape(element) {\n  let transform = cumulativeTransform(element);\n  return {\n    a: transform.a,\n    b: transform.b,\n    c: transform.c,\n    d: transform.d,\n  };\n}\n\nexport function boundsAndShape(element) {\n  let s = shape(element);\n  let b = bounds(element);\n  s.width = b.width;\n  s.height = b.height;\n  s.top = b.top;\n  s.left = b.left;\n  return s;\n}\n\nfunction checkFields(fields, tolerance, value, expected, message) {\n  let filteredActual = Object.create(null);\n  let filteredExpected = Object.create(null);\n  fields.forEach((field) => {\n    filteredActual[field] = value[field];\n    filteredExpected[field] = expected[field];\n  });\n\n  this.pushResult({\n    result: fields.every(\n      (field) => Math.abs(value[field] - expected[field]) < tolerance,\n    ),\n    actual: filteredActual,\n    expected: filteredExpected,\n    message: message,\n  });\n}\n\nexport async function visuallyConstant(target, fn, message) {\n  let before = boundsAndShape(target);\n  await fn();\n  let after = boundsAndShape(target);\n  checkFields.call(\n    this,\n    ['a', 'b', 'c', 'd', 'top', 'left', 'width', 'height'],\n    0.25,\n    before,\n    after,\n    message,\n  );\n}\n\nexport function approxEqualColors(value, expected, message) {\n  const tolerance = 3;\n  let valueColor = Color.fromUserProvidedColor(value);\n  let expectedColor = Color.fromUserProvidedColor(expected);\n  let channels = ['r', 'g', 'b', 'a'];\n  this.pushResult({\n    result: channels.every(\n      (channel) =>\n        Math.abs(valueColor[channel] - expectedColor[channel]) < tolerance,\n    ),\n    actual: value,\n    expected,\n    message,\n  });\n}\n\nexport let time;\n\nexport function setupAnimationTest(hooks) {\n  hooks.beforeEach(function (assert) {\n    time = new TimeControl();\n    time.runAtSpeed(40);\n\n    // equal checks use a quarter pixel tolerance because we don't care about rounding errors\n    assert.equalPosition = checkFields.bind(assert, ['left', 'top'], 0.25);\n    assert.equalSize = checkFields.bind(assert, ['height', 'width'], 0.25);\n    assert.equalBounds = checkFields.bind(\n      assert,\n      ['height', 'left', 'top', 'width'],\n      0.25,\n    );\n\n    // closeness checks accept a custom pixel tolerance\n    assert.closePosition = checkFields.bind(assert, ['left', 'top']);\n    assert.closeSize = checkFields.bind(assert, ['height', 'width']);\n    assert.closeBounds = checkFields.bind(assert, [\n      'height',\n      'left',\n      'top',\n      'width',\n    ]);\n\n    assert.visuallyConstant = visuallyConstant;\n    assert.approxEqualColors = approxEqualColors;\n  });\n  hooks.afterEach(function () {\n    time.finished();\n    time = null;\n  });\n}\n"],"names":["animationsSettled","idle","getContext","importSync","owner","run","lookup","get","perform","Promise","resolve","bounds","element","relativeBounds","getBoundingClientRect","document","querySelector","shape","transform","cumulativeTransform","a","b","c","d","boundsAndShape","s","width","height","top","left","checkFields","fields","tolerance","value","expected","message","filteredActual","Object","create","filteredExpected","forEach","field","pushResult","result","every","Math","abs","actual","visuallyConstant","target","fn","before","after","call","approxEqualColors","valueColor","Color","fromUserProvidedColor","expectedColor","channels","channel","time","setupAnimationTest","hooks","beforeEach","assert","TimeControl","runAtSpeed","equalPosition","bind","equalSize","equalBounds","closePosition","closeSize","closeBounds","afterEach","finished"],"mappings":"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"}