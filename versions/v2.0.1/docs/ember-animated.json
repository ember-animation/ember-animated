{"jsonapi":{"version":"1.0"},"data":{"type":"project","id":"ember-animated","attributes":{"name":"ember-animated","version":"1.0.4","navigationIndex":[{"type":"components","items":[{"id":"ember-animated/components/animated-beacon","path":"components/animated-beacon","name":"<AnimatedBeacon/>"},{"id":"ember-animated/components/animated-container","path":"components/animated-container","name":"<AnimatedContainer/>"},{"id":"ember-animated/components/animated-each","path":"components/animated-each","name":"<AnimatedEach/>"},{"id":"ember-animated/components/animated-if","path":"components/animated-if","name":"<AnimatedIf/>"},{"id":"ember-animated/components/animated-orphans","path":"components/animated-orphans","name":"<AnimatedOrphans/>"},{"id":"ember-animated/components/animated-value","path":"components/animated-value","name":"<AnimatedValue/>"}]},{"type":"classes","items":[{"id":"ember-animated/-private/sprite~Sprite","path":"modules/ember-animated/-private/sprite~Sprite","name":"Sprite"}]},{"type":"modules","items":[{"id":"ember-animated/motions/adjust-css","path":"modules/ember-animated/motions/adjust-css","name":"ember-animated/motions/adjust-css"},{"id":"ember-animated/motions/move","path":"modules/ember-animated/motions/move","name":"ember-animated/motions/move"},{"id":"ember-animated/motions/opacity","path":"modules/ember-animated/motions/opacity","name":"ember-animated/motions/opacity"},{"id":"ember-animated/motions/resize","path":"modules/ember-animated/motions/resize","name":"ember-animated/motions/resize"},{"id":"ember-animated/motions/scale","path":"modules/ember-animated/motions/scale","name":"ember-animated/motions/scale"},{"id":"ember-animated/transitions/fade","path":"modules/ember-animated/transitions/fade","name":"ember-animated/transitions/fade"}]}]},"relationships":{"modules":{"data":[{"type":"module","id":"ember-animated/-private/sprite"},{"type":"module","id":"ember-animated/components/animated-beacon"},{"type":"module","id":"ember-animated/components/animated-container"},{"type":"module","id":"ember-animated/components/animated-each"},{"type":"module","id":"ember-animated/components/animated-if"},{"type":"module","id":"ember-animated/components/animated-orphans"},{"type":"module","id":"ember-animated/components/animated-value"},{"type":"module","id":"ember-animated/motions/adjust-css"},{"type":"module","id":"ember-animated/motions/move"},{"type":"module","id":"ember-animated/motions/opacity"},{"type":"module","id":"ember-animated/motions/resize"},{"type":"module","id":"ember-animated/motions/scale"},{"type":"module","id":"ember-animated/transitions/fade"}]}}},"included":[{"type":"class","id":"ember-animated/-private/sprite~Sprite","attributes":{"name":"Sprite","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>A Sprite is our handle to a DOM element that we want to animate.</p>\n<p>It manages locking and unlocking the element (which means taking it\nin and out of static document flow so it&#39;s readily animatable).</p>\n<p>It tracks the sprite&#39;s current transform.</p>\n<p>It tracks the sprite&#39;s initial and/or final bounds, as measured\nfrom the actual pre- and/or post-animation DOM.</p>\n</div>","lineNumber":17,"access":"public","tags":[],"isInterface":false,"exportType":"default","decorators":[],"fields":[],"methods":[{"name":"getInitialDimension","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>Returns the attribute value from the initial position object with the\ngiven <code>name</code>.</p>\n<p><em>This is mostly intended for use with SVG, where you can say things\nlike <code>getInitialDimension(&#39;x&#39;)</code>.</em></p>\n</div>","lineNumber":276,"access":"public","tags":[],"returns":{"type":"Number|string","description":"","properties":[]},"params":[{"name":"name","type":"string","description":"The desired attribute name."}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"getFinalDimension","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>Returns the attribute value from the final position object with the\ngiven <code>name</code>.</p>\n<p><em>This is mostly intended for use with SVG, where you can say things\nlike <code>getFinalDimension(&#39;x&#39;)</code>.</em></p>\n</div>","lineNumber":293,"access":"public","tags":[],"returns":{"type":"Number|string","description":"","properties":[]},"params":[{"name":"name","type":"string","description":"The desired attribute name."}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"initialCumulativeTransform","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>Analogous to initialBounds, this is a snapshot of the cumulative\neffect of all transforms on this sprite at the start of\nanimation.</p>\n</div>","lineNumber":310,"access":"public","tags":[],"returns":{"type":"Transform","description":"","properties":[]},"params":[],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"finalCumulativeTransform","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>Analogous to finalBounds, this is a snapshot of the cumulative\neffect of all transforms on this sprite at the end of animation.</p>\n</div>","lineNumber":322,"access":"public","tags":[],"returns":{"type":"Transform","description":"","properties":[]},"params":[],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"originalInitialBounds","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>Some things methods (like startAtSprite, startAtPixel, etc) can\nset or alter the initialBounds. This gives you access to the\noriginal value (which may be undefined if this sprite didn&#39;t have\nany initial bounds, which is the case for newly inserted\nsprites).</p>\n</div>","lineNumber":333,"access":"public","tags":[],"returns":{"type":"DOMRect","description":"","properties":[]},"params":[],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"originalFinalBounds","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>Some things (like endAtSprite) can alter the finalBounds. This\ngives you access to the original value (which may be undefined if\nthe sprite didn&#39;t have any final bounds, which is the case for\nremovedSprites).</p>\n</div>","lineNumber":347,"access":"public","tags":[],"returns":{"type":"DOMRect","description":"","properties":[]},"params":[],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"difference","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>Returns the difference between two sprites, represented as x and y\ncoordinates.</p>\n<p><em><code>this.difference(&#39;initialBounds&#39;, other, &#39;finalBounds&#39;)</code> is\ninterpreted as &quot;the difference between this sprite&#39;s initial bounds\nand the other sprite&#39;s final bounds&quot;.</em></p>\n<p><em>It works this way because each sprite has its own local coordinate\nsystem.</em></p>\n</div>","lineNumber":514,"access":"public","tags":[],"returns":{"type":"object","description":"","properties":[]},"params":[{"name":"which","type":"string","description":"The current sprite's comparison attribute."},{"name":"otherSprite","type":"Sprite","description":"The other sprite."},{"name":"otherWhich","type":"string","description":"The other sprite's comparison attribute."}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"applyStyles","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>This is your general purpose hook for changing CSS properties of\nthe sprite&#39;s element. Use this when there&#39;s not a more specific\nmethod like <code>translate()</code>, <code>scale()</code>, <code>hide()</code>, or <code>reveal()</code>.</p>\n<pre class=\"docs-md__code\"><code class=\"language-js\">sprite.<span class=\"hljs-title function_\">applyStyles</span>({\n  <span class=\"hljs-string\">&#x27;opacity&#x27;</span>: <span class=\"hljs-string\">&#x27;0&#x27;</span>,\n  <span class=\"hljs-string\">&#x27;z-index&#x27;</span>: <span class=\"hljs-string\">&#x27;1&#x27;</span>\n});\n</code></pre>\n<p>Nothing you do to the sprite will persist after the transition is\nfinished â€“ we clean things up when it ends.</p>\n</div>","lineNumber":763,"access":"public","tags":[],"returns":{"type":"void","description":"","properties":[]},"params":[{"name":"styles","type":"object","description":"The styles to apply to the sprite."}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"hide","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>Hides the sprite using CSS visibility property.</p>\n</div>","lineNumber":816,"access":"public","tags":[],"returns":{"type":"void","description":"","properties":[]},"params":[],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"reveal","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>Reveals the sprite using CSS visibility property.</p>\n<p><em>Newly inserted sprites start hidden, and are revealed when you\nstart animating them. You can manually reveal them with this if\nyou want them to appear right away and you&#39;re not animating them.</em></p>\n</div>","lineNumber":827,"access":"public","tags":[],"returns":{"type":"void","description":"","properties":[]},"params":[],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"display","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>Manages the application of the <code>ember-animated-none</code> CSS class on\nthe element.</p>\n<p>When the flag is truthy, the class is removed and the element is\ntherefore visible.</p>\n<p>When the flag is falsy, the class is applied and the element is\ntherefore hidden.</p>\n</div>","lineNumber":844,"access":"public","tags":[],"returns":{"type":"void","description":"","properties":[]},"params":[{"name":"flag","type":"boolean","description":""}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"translate","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>Translates the sprite by the given number of screen pixels.</p>\n<p><em>Disregards any pre-existing transforms.</em></p>\n</div>","lineNumber":866,"access":"public","tags":[],"returns":{"type":"void","description":"","properties":[]},"params":[{"name":"dx","type":"number","description":"The number of screen pixels on the x axis."},{"name":"dy","type":"number","description":"The number of screen pixels on the y axis."}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"scale","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>Adjusts the sprite&#39;s scale by the given scaling factors.</p>\n</div>","lineNumber":886,"access":"public","tags":[],"returns":{"type":"void","description":"","properties":[]},"params":[{"name":"scaleX","type":"number","description":"The scaling factor to apply to the x axis."},{"name":"scaleY","type":"number","description":"The scaling factor to apply to the y axis."}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"rehome","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>Adjusts the sprite so it will still be in the same visual position\ndespite being moved into a new offset parent.</p>\n</div>","lineNumber":903,"access":"public","tags":[],"returns":{"type":"void","description":"","properties":[]},"params":[{"name":"newOffsetSprite","type":"Sprite","description":""}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"startAtSprite","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>Sets the sprite&#39;s <code>initialBounds</code> relative to the provided <code>otherSprite</code>.</p>\n</div>","lineNumber":960,"access":"public","tags":[],"returns":{"type":"void","description":"","properties":[]},"params":[{"name":"otherSprite","type":"Sprite","description":""}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"startAtPixel","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>Sets the sprite&#39;s <code>initialBounds</code> using the provided\nx and y coordinates.</p>\n<pre class=\"docs-md__code\"><code class=\"language-js\">sprite.<span class=\"hljs-title function_\">startAtPixel</span>({ <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">0</span> });\n</code></pre>\n</div>","lineNumber":980,"access":"public","tags":[],"returns":{"type":"void","description":"","properties":[]},"params":[{"name":"point","type":"object","description":"The x and y coordinates."}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"startTranslatedBy","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>Sets the sprite&#39;s <code>initialBounds</code> relative to its <code>finalBounds</code>.</p>\n</div>","lineNumber":1010,"access":"public","tags":[],"returns":{"type":"void","description":"","properties":[]},"params":[{"name":"dx","type":"number","description":""},{"name":"dy","type":"number","description":""}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"moveToFinalPosition","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>Moves the sprite to its final position (<code>finalBounds</code>).</p>\n</div>","lineNumber":1051,"access":"public","tags":[],"returns":{"type":"void","description":"","properties":[]},"params":[],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"endAtSprite","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>Sets the sprite&#39;s <code>finalBounds</code> using the provided <code>otherSprite</code>.</p>\n</div>","lineNumber":1068,"access":"public","tags":[],"returns":{"type":"void","description":"","properties":[]},"params":[{"name":"otherSprite","type":"Sprite","description":""}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"endAtPixel","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>Sets the sprite&#39;s <code>finalBounds</code> using the provided point <code>{ x, y }</code>.</p>\n<pre class=\"docs-md__code\"><code class=\"language-js\">sprite.<span class=\"hljs-title function_\">endAtPixel</span>({ <span class=\"hljs-attr\">x</span>: <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">innerWidth</span> });\n</code></pre>\n</div>","lineNumber":1087,"access":"public","tags":[],"returns":{"type":"void","description":"","properties":[]},"params":[{"name":"point","type":"object","description":"The x and y coordinates."}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"endTranslatedBy","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>Sets the sprite&#39;s <code>finalBounds</code> using its <code>initialBounds</code> and\nthe provided x and y axis offset.</p>\n</div>","lineNumber":1116,"access":"public","tags":[],"returns":{"type":"void","description":"","properties":[]},"params":[{"name":"dx","type":"number","description":"The x axis offset."},{"name":"dy","type":"number","description":"The y axis offset."}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"endRelativeTo","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>Sets this sprite&#39;s <code>finalBounds</code> so that its position relative\nto the <code>otherSprite</code> remains constant through the transition.</p>\n</div>","lineNumber":1129,"access":"public","tags":[],"returns":{"type":"void","description":"","properties":[]},"params":[{"name":"otherSprite","type":"Sprite","description":"Note: must have initial and final bounds"}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]}],"accessors":[{"name":"initialBounds","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>A DOMRect representing the place where this sprite will start the\ntransition.</p>\n<pre class=\"docs-md__code\"><code class=\"language-js\">sprite.<span class=\"hljs-property\">initialBounds</span>;\n<span class=\"hljs-comment\">// { top: 0, bottom: 230, left: 0, right: 256, width: 256 }</span>\n</code></pre>\n<p>Not every sprite has initialBounds (a newly inserted\nsprite will not -- it will only have finalBounds).</p>\n<p>The position is measured <em>relative</em> to our offsetParent, if we\nhave one. Most of the time we want motions to act in relative\nterms, so that if we&#39;re inside another animator things still work\nout correctly.</p>\n<p>You can manipulate initialBounds using methods like startAtPixel.</p>\n<p>Motions should look at initialBounds and finalBounds to decide\nwhat to do.</p>\n</div>","lineNumber":150,"access":"public","tags":[],"type":"DOMRect","isStatic":false,"decorators":[],"hasGetter":true,"hasSetter":false},{"name":"absoluteInitialBounds","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>Like initialBounds, but relative to the screen, not the offset\nparent. Most of the time you <em>don&#39;t</em> want this one, because your\nmotion will be more robust to ancestor motion if you do\neverything in relative terms.</p>\n</div>","lineNumber":179,"access":"public","tags":[],"type":"DOMRect","isStatic":false,"decorators":[],"hasGetter":true,"hasSetter":false},{"name":"finalBounds","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>A DOMRect representing the place where this sprite will end the\ntransition. Not every sprite has finalBounds (a sprite that is\nabout to be destroyed will not -- it will only have\ninitialBounds).</p>\n<p>The position is measured <em>relative</em> to our offsetParent, if we\nhave one. Most of the time we want motions to act in relative\nterms, so that if we&#39;re inside another animator things still work\nout correctly.</p>\n<p>You can manipulate finalBounds using methods like endAtPixel.</p>\n</div>","lineNumber":200,"access":"public","tags":[],"type":"DOMRect","isStatic":false,"decorators":[],"hasGetter":true,"hasSetter":false},{"name":"absoluteFinalBounds","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>Like initialBounds, but relative to the screen, not the offset\nparent. Most of the time you <em>don&#39;t</em> want this one, because your\nmotion will be more robust to ancestor motion if you do\neverything in relative terms.</p>\n</div>","lineNumber":219,"access":"public","tags":[],"type":"DOMRect","isStatic":false,"decorators":[],"hasGetter":true,"hasSetter":false},{"name":"initialComputedStyle","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>A snapshot of the sprite&#39;s computed style at the start of the\ntransition. We don&#39;t copy every possible property, see\nCopiedCSS.</p>\n<p>This is powered by getComputedStyle, so the property names and\nvalues will follow those semantics.</p>\n<p>Not every sprite will have an initialComputedStyle\n(<code>insertedSprites</code> do not).</p>\n</div>","lineNumber":240,"access":"public","tags":[],"type":"CSSStyleDeclaration","isStatic":false,"decorators":[],"hasGetter":true,"hasSetter":false},{"name":"finalComputedStyle","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>A snapshot of the sprite&#39;s computed style at the end of the\ntransition. We don&#39;t copy every possible property, see\nCopiedCSS.</p>\n<p>This is powered by getComputedStyle, so the property names and\nvalues will follow those semantics.</p>\n<p>Not every sprite will have a finalComputedStyle\n(<code>removedSprites</code> do not).</p>\n</div>","lineNumber":258,"access":"public","tags":[],"type":"CSSStyleDeclaration","isStatic":false,"decorators":[],"hasGetter":true,"hasSetter":false},{"name":"transform","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>Returns the sprite&#39;s current transform, with appropriate caching\nso that you don&#39;t trigger reflows.</p>\n</div>","lineNumber":560,"access":"public","tags":[],"type":"Transform","isStatic":false,"decorators":[],"hasGetter":true,"hasSetter":false},{"name":"cumulativeTransform","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>This is different from <code>this.transform</code> because it&#39;s the product\nof our own transform and all ancestor transforms. It&#39;s what you\nneed if you want to understand how many real screen pixels there\nare to every local pixel in the sprite.</p>\n</div>","lineNumber":574,"access":"public","tags":[],"type":"Object","isStatic":false,"decorators":[],"hasGetter":true,"hasSetter":false},{"name":"revealed","file":"ember-animated/-private/sprite","description":"<div class=\"docs-md\"><p>Returns wether the sprite is revealed or not.</p>\n</div>","lineNumber":592,"access":"public","tags":[],"type":"boolean","isStatic":false,"decorators":[],"hasGetter":true,"hasSetter":false}],"parentClassId":null}},{"type":"module","id":"ember-animated/-private/sprite","attributes":{"file":"ember-animated/-private/sprite","functions":[],"variables":[]},"relationships":{"classes":{"data":[{"type":"class","id":"ember-animated/-private/sprite~Sprite"}]},"components":{"data":[]}}},{"type":"component","id":"ember-animated/components/animated-beacon~animated-beacon","attributes":{"name":"animated-beacon","file":"ember-animated/components/animated-beacon","description":"<div class=\"docs-md\"><p>A component that marks a region of the page that\ncan serve as a source or destination for sprites to animate to and from.</p>\n<pre class=\"docs-md__code\"><code class=\"language-hbs\"><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">animated-beacon</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;one&quot;</span>}}</span><span class=\"language-xml\">\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> </span></span><span class=\"hljs-template-variable\">{{<span class=\"hljs-name\"><span class=\"hljs-built_in\">action</span></span> <span class=\"hljs-string\">&quot;launch&quot;</span>}}</span><span class=\"language-xml\"><span class=\"hljs-tag\">&gt;</span>Launch<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n</span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">animated-beacon</span>}}</span><span class=\"language-xml\">\n\n</span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">animated-<span class=\"hljs-built_in\">if</span></span> showThing <span class=\"hljs-attr\">use</span>=transition}}</span><span class=\"language-xml\">\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;message&quot;</span> </span></span><span class=\"hljs-template-variable\">{{<span class=\"hljs-name\"><span class=\"hljs-built_in\">action</span></span> <span class=\"hljs-string\">&quot;dismiss&quot;</span>}}</span><span class=\"language-xml\"><span class=\"hljs-tag\">&gt;</span>\n    Hello\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">animated-<span class=\"hljs-built_in\">if</span></span>}}</span>\n</code></pre>\n<pre class=\"docs-md__code\"><code class=\"language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Component</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@ember/component&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> move <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;ember-animated/motions/move&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> scale <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;ember-animated/motions/scale&#x27;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">Component</span>.<span class=\"hljs-title function_\">extend</span>({\n  <span class=\"hljs-attr\">showThing</span>: <span class=\"hljs-literal\">false</span>,\n\n  <span class=\"hljs-attr\">transition</span>: <span class=\"hljs-keyword\">function</span> *({ insertedSprites, keptSprites, removedSprites, beacons }) {\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> sprite <span class=\"hljs-keyword\">of</span> insertedSprites) {\n      sprite.<span class=\"hljs-title function_\">startAtSprite</span>(beacons.<span class=\"hljs-property\">one</span>);\n      <span class=\"hljs-title function_\">move</span>(sprite);\n      <span class=\"hljs-title function_\">scale</span>(sprite);\n    }\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> sprite <span class=\"hljs-keyword\">of</span> keptSprites) {\n      <span class=\"hljs-title function_\">move</span>(sprite);\n    }\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> sprite <span class=\"hljs-keyword\">of</span> removedSprites) {\n      sprite.<span class=\"hljs-title function_\">endAtSprite</span>(beacons.<span class=\"hljs-property\">one</span>);\n      <span class=\"hljs-title function_\">move</span>(sprite);\n      <span class=\"hljs-title function_\">scale</span>(sprite);\n    }\n  });\n},\n\n  <span class=\"hljs-attr\">actions</span>: {\n    <span class=\"hljs-title function_\">launch</span>(<span class=\"hljs-params\"></span>) {\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">&#x27;showThing&#x27;</span>, <span class=\"hljs-literal\">true</span>);\n    },\n    <span class=\"hljs-title function_\">dismiss</span>(<span class=\"hljs-params\"></span>) {\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">&#x27;showThing&#x27;</span>, <span class=\"hljs-literal\">false</span>);\n    }\n  }\n});\n</code></pre>\n</div>","lineNumber":18,"access":"public","tags":[],"isInterface":false,"exportType":"default","decorators":[],"fields":[],"methods":[],"accessors":[],"parentClassId":null,"arguments":[],"yields":[]}},{"type":"module","id":"ember-animated/components/animated-beacon","attributes":{"file":"ember-animated/components/animated-beacon","functions":[],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[{"type":"component","id":"ember-animated/components/animated-beacon~animated-beacon"}]}}},{"type":"component","id":"ember-animated/components/animated-container~animated-container","attributes":{"name":"animated-container","file":"ember-animated/components/animated-container","description":"<div class=\"docs-md\"><p>Provides a boundary between animator components and the surrounding document\nwhich smoothly resizes as animators change. Use animated-container whenever you\nneed to &quot;hold a place for&quot; some animated content while that content is animating.</p>\n<pre class=\"docs-md__code\"><code class=\"language-hbs\"><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> </span></span><span class=\"hljs-template-variable\">{{<span class=\"hljs-name\">on</span> <span class=\"hljs-string\">&quot;click&quot;</span> this.toggleThing}}</span><span class=\"language-xml\"><span class=\"hljs-tag\">&gt;</span>Toggle<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">AnimatedContainer</span>&gt;</span>\n  </span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">animated-<span class=\"hljs-built_in\">if</span></span> this.showThing <span class=\"hljs-attr\">use</span>=this.transition }}</span><span class=\"language-xml\">\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;message&quot;</span> </span></span><span class=\"hljs-template-variable\">{{<span class=\"hljs-name\">on</span> <span class=\"hljs-string\">&quot;click&quot;</span> this.toggleThing}}</span><span class=\"language-xml\"><span class=\"hljs-tag\">&gt;</span>\n          Hello!\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  </span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">animated-<span class=\"hljs-built_in\">if</span></span>}}</span><span class=\"language-xml\">\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">AnimatedContainer</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>\n  This is outside of the container.\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span></span>\n</code></pre>\n<pre class=\"docs-md__code\"><code class=\"language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Component</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@ember/component&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { action } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@ember/object&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { tracked } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@glimmer/tracking&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> move <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;ember-animated/motions/move&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { easeOut, easeIn } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;ember-animated/easings/cosine&#x27;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">AnimatedContainerComponentExample</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">Component</span> {\n  @tracked showThing = <span class=\"hljs-literal\">false</span>;\n\n  @action\n  <span class=\"hljs-title function_\">toggleThing</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">showThing</span> = !<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">showThing</span>;\n  }\n\n  *<span class=\"hljs-title function_\">transition</span>(<span class=\"hljs-params\">{ insertedSprites, keptSprites, removedSprites }</span>) {\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> sprite <span class=\"hljs-keyword\">of</span> insertedSprites) {\n      sprite.<span class=\"hljs-title function_\">startAtPixel</span>({ <span class=\"hljs-attr\">x</span>: <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">innerWidth</span> });\n      <span class=\"hljs-keyword\">yield</span> <span class=\"hljs-title function_\">move</span>(sprite, { <span class=\"hljs-attr\">easing</span>: easeOut });\n    }\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> sprite <span class=\"hljs-keyword\">of</span> keptSprites) {\n      <span class=\"hljs-keyword\">yield</span> <span class=\"hljs-title function_\">move</span>(sprite);\n    }\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> sprite <span class=\"hljs-keyword\">of</span> removedSprites) {\n      sprite.<span class=\"hljs-title function_\">endAtPixel</span>({ <span class=\"hljs-attr\">x</span>: <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">innerWidth</span> });\n      <span class=\"hljs-keyword\">yield</span> <span class=\"hljs-title function_\">move</span>(sprite, { <span class=\"hljs-attr\">easing</span>: easeIn });\n    }\n  }\n}\n</code></pre>\n</div>","lineNumber":32,"access":"public","tags":[],"isInterface":false,"exportType":"default","decorators":[],"fields":[],"methods":[],"accessors":[],"parentClassId":null,"arguments":[{"name":"tag","file":"ember-animated/components/animated-container","description":"<div class=\"docs-md\"><p>Use a custom tag for the container. Defaults to div.</p>\n</div>","lineNumber":92,"access":"public","tags":[],"type":"String","isStatic":false,"decorators":[]},{"name":"onInitialRender","file":"ember-animated/components/animated-container","description":"<div class=\"docs-md\"><p>Whether to animate the initial render. You will probably also need to set\ninitialInsertion=true on a child component of animated-container.\nDefaults to false.</p>\n</div>","lineNumber":101,"access":"public","tags":[],"type":"Boolean","isStatic":false,"decorators":[]},{"name":"motion","file":"ember-animated/components/animated-container","description":"<div class=\"docs-md\"><p>Use a custom tag for the container. Defaults to div.</p>\n</div>","lineNumber":110,"access":"public","tags":[],"type":"String","isStatic":false,"decorators":[]}],"yields":[]}},{"type":"module","id":"ember-animated/components/animated-container","attributes":{"file":"ember-animated/components/animated-container","functions":[],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[{"type":"component","id":"ember-animated/components/animated-container~animated-container"}]}}},{"type":"component","id":"ember-animated/components/animated-each~animated-each","attributes":{"name":"animated-each","file":"ember-animated/components/animated-each","description":"<div class=\"docs-md\"><p>A drop in replacement for <code>{{#each}}</code> that animates changes to a list.</p>\n<pre class=\"docs-md__code\"><code class=\"language-hbs\"><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">animated-<span class=\"hljs-built_in\">each</span></span> items <span class=\"hljs-attr\">use</span>=transition <span class=\"hljs-attr\">duration</span>=<span class=\"hljs-number\">2000</span> <span class=\"hljs-keyword\">as</span> |item|}}</span><span class=\"language-xml\">\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">data-test-item</span>=</span></span><span class=\"hljs-template-variable\">{{<span class=\"hljs-name\">item</span>}}</span><span class=\"language-xml\"><span class=\"hljs-tag\"> <span class=\"hljs-attr\">onclick</span>=</span></span><span class=\"hljs-template-variable\">{{<span class=\"hljs-name\"><span class=\"hljs-built_in\">action</span></span> removeItem item}}</span><span class=\"language-xml\"><span class=\"hljs-tag\">&gt;</span>\n    </span><span class=\"hljs-template-variable\">{{<span class=\"hljs-name\">item</span>}}</span><span class=\"language-xml\">\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">animated-<span class=\"hljs-built_in\">each</span></span>}}</span>\n</code></pre>\n<pre class=\"docs-md__code\"><code class=\"language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Component</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@ember/component&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> move <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;ember-animated/motions/move&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { fadeOut } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;ember-animated/motions/opacity&#x27;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">Component</span>.<span class=\"hljs-title function_\">extend</span>({\n  <span class=\"hljs-title function_\">init</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">_super</span>();\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">items</span> = [<span class=\"hljs-string\">&#x27;A&#x27;</span>, <span class=\"hljs-string\">&#x27;B&#x27;</span>, <span class=\"hljs-string\">&#x27;C&#x27;</span>, <span class=\"hljs-string\">&#x27;D&#x27;</span>, <span class=\"hljs-string\">&#x27;E&#x27;</span>];\n  },\n\n  * <span class=\"hljs-title function_\">transition</span>(<span class=\"hljs-params\">{ keptSprites, removedSprites }</span>) {\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> sprite <span class=\"hljs-keyword\">of</span> keptSprites) {\n      <span class=\"hljs-title function_\">move</span>(sprite);\n    }\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> sprite <span class=\"hljs-keyword\">of</span> removedSprites) {\n      <span class=\"hljs-title function_\">fadeOut</span>(sprite);\n    }\n  },\n\n  <span class=\"hljs-title function_\">removeItem</span>(<span class=\"hljs-params\">item</span>){\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">&#x27;items&#x27;</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">items</span>.<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">i</span> =&gt;</span> i !== item));\n  }\n});\n</code></pre>\n</div>","lineNumber":67,"access":"public","tags":[],"isInterface":false,"exportType":"default","decorators":[],"fields":[],"methods":[],"accessors":[],"parentClassId":null,"arguments":[{"name":"items","file":"ember-animated/components/animated-each","description":"<div class=\"docs-md\"><p>The list of data you are trying to render.</p>\n</div>","lineNumber":115,"access":"public","tags":[],"type":"Array","isStatic":false,"decorators":[]},{"name":"group","file":"ember-animated/components/animated-each","description":"<div class=\"docs-md\"><p>If set, this animator will only <a href=\"../../between\"  class=\"docs-md__a\">match</a> other animators that have the same group value.</p>\n</div>","lineNumber":122,"access":"public","tags":[],"type":"String","isStatic":false,"decorators":[]},{"name":"duration","file":"ember-animated/components/animated-each","description":"<div class=\"docs-md\"><p>Represents the amount of time an animation takes in miliseconds.</p>\n</div>","lineNumber":129,"access":"public","tags":[],"type":"Number","isStatic":false,"decorators":[]},{"name":"use","file":"ember-animated/components/animated-each","description":"<div class=\"docs-md\"><p>Specifies the <a href=\"../../transitions\"  class=\"docs-md__a\">Transition</a>\nto run when the list changes.</p>\n</div>","lineNumber":136,"access":"public","tags":[],"type":"Transition","isStatic":false,"decorators":[]},{"name":"rules","file":"ember-animated/components/animated-each","description":"<div class=\"docs-md\"><p>Specifies data-dependent <a href=\"../../rules\"  class=\"docs-md__a\">Rules</a> that choose which <a href=\"../../transitions\"  class=\"docs-md__a\">Transition</a>\nto run when the list changes. This takes precedence over <code>use</code>.</p>\n</div>","lineNumber":144,"access":"public","tags":[],"type":"Rules","isStatic":false,"decorators":[]},{"name":"initialInsertion","file":"ember-animated/components/animated-each","description":"<div class=\"docs-md\"><p>When true, all the items in the list will animate as <a href=\"../../sprites\"  class=\"docs-md__a\"><code>insertedSprites</code></a> when the <code>{{#animated-each}}</code> is first rendered. Defaults to false.</p>\n</div>","lineNumber":158,"access":"public","tags":[],"type":"Boolean","isStatic":false,"decorators":[]},{"name":"finalRemoval","file":"ember-animated/components/animated-each","description":"<div class=\"docs-md\"><p>When true, all the items in the list will animate as <a href=\"../../sprites\"  class=\"docs-md__a\"><code>removedSprites</code></a> when the <code>{{#animated-each}}</code> is destroyed. Defaults to false.</p>\n<p>Note that an <code>&lt;AnimatedOrphans/&gt;</code> component must be actively rendered when this animator is removed for this option to have any effect.</p>\n</div>","lineNumber":165,"access":"public","tags":[],"type":"Boolean","isStatic":false,"decorators":[]},{"name":"key","file":"ember-animated/components/animated-each","description":"<div class=\"docs-md\"><p>Serves the same purpose as the <code>key</code> in ember <code>{{#each}}</code>, and it&#39;s\nalso used to compare values when <a href=\"../../between\"  class=\"docs-md__a\">animating between components</a>.</p>\n</div>","lineNumber":175,"access":"public","tags":[],"type":"String","isStatic":false,"decorators":[]},{"name":"watch","file":"ember-animated/components/animated-each","description":"<div class=\"docs-md\"><p>An optional comma-separated list of properties to observe on each of the\nobjects in the items list. If any of those properties change, we will\ntrigger an animated transition. Without this, we only animate when the list\ncontents change, not when any deeper properties change.</p>\n</div>","lineNumber":183,"access":"public","tags":[],"type":"String","isStatic":false,"decorators":[]}],"yields":[]}},{"type":"module","id":"ember-animated/components/animated-each","attributes":{"file":"ember-animated/components/animated-each","functions":[],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[{"type":"component","id":"ember-animated/components/animated-each~animated-each"}]}}},{"type":"component","id":"ember-animated/components/animated-if~animated-if","attributes":{"name":"animated-if","file":"ember-animated/components/animated-if","description":"<div class=\"docs-md\"><p>A drop in replacement for <code>{{#if}}</code> that animates changes when the predicate changes.\nAnimated-if uses the same arguments as animated-each.</p>\n<pre class=\"docs-md__code\"><code class=\"language-hbs\"><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> </span></span><span class=\"hljs-template-variable\">{{<span class=\"hljs-name\">on</span> <span class=\"hljs-string\">&#x27;click&#x27;</span> this.toggleThing}}</span><span class=\"language-xml\"><span class=\"hljs-tag\">&gt;</span>Toggle<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n\n</span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">animated-<span class=\"hljs-built_in\">if</span></span> showThing <span class=\"hljs-attr\">use</span>=transition}}</span><span class=\"language-xml\">\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;message&quot;</span> </span></span><span class=\"hljs-template-variable\">{{<span class=\"hljs-name\">on</span> <span class=\"hljs-string\">&#x27;click&#x27;</span> this.toggleThing}}</span><span class=\"language-xml\"><span class=\"hljs-tag\"> <span class=\"hljs-attr\">role</span>=<span class=\"hljs-string\">&quot;button&quot;</span>&gt;</span>\n    myContent\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">animated-<span class=\"hljs-built_in\">if</span></span>}}</span>\n</code></pre>\n<pre class=\"docs-md__code\"><code class=\"language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Component</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@glimmer/component&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> move <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;ember-animated/motions/move&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { easeOut, easeIn } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;ember-animated/easings/cosine&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { tracked } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@glimmer/tracking&#x27;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">FooComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">Component</span> {\n  @tracked showThing = <span class=\"hljs-literal\">false</span>;\n\n  <span class=\"hljs-title function_\">toggleThing</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">showThing</span> = !<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">showThing</span>;\n  }\n\n  <span class=\"hljs-comment\">// eslint-disable-next-line require-yield</span>\n  *<span class=\"hljs-title function_\">transition</span>(<span class=\"hljs-params\">{ insertedSprites, keptSprites, removedSprites }</span>) {\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> sprite <span class=\"hljs-keyword\">of</span> insertedSprites) {\n      sprite.<span class=\"hljs-title function_\">startAtPixel</span>({ <span class=\"hljs-attr\">x</span>: <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">innerWidth</span> });\n      <span class=\"hljs-title function_\">move</span>(sprite, { <span class=\"hljs-attr\">easing</span>: easeOut });\n    }\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> sprite <span class=\"hljs-keyword\">of</span> keptSprites) {\n      <span class=\"hljs-title function_\">move</span>(sprite);\n    }\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> sprite <span class=\"hljs-keyword\">of</span> removedSprites) {\n      sprite.<span class=\"hljs-title function_\">endAtPixel</span>({ <span class=\"hljs-attr\">x</span>: <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">innerWidth</span> });\n      <span class=\"hljs-title function_\">move</span>(sprite, { <span class=\"hljs-attr\">easing</span>: easeIn });\n    }\n  }\n};\n</code></pre>\n</div>","lineNumber":16,"access":"public","tags":[],"isInterface":false,"exportType":"default","decorators":[],"fields":[],"methods":[],"accessors":[],"parentClassId":null,"arguments":[],"yields":[]}},{"type":"module","id":"ember-animated/components/animated-if","attributes":{"file":"ember-animated/components/animated-if","functions":[],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[{"type":"component","id":"ember-animated/components/animated-if~animated-if"}]}}},{"type":"component","id":"ember-animated/components/animated-orphans~animated-orphans","attributes":{"name":"animated-orphans","file":"ember-animated/components/animated-orphans","description":"<div class=\"docs-md\"><p>A component that adopts any orphaned sprites so they can continue animating even\nafter their original parent component has been destroyed. This relies on cloning\nDOM nodes, and the cloned nodes will be inserted as children of animated-orphans.</p>\n<pre class=\"docs-md__code\"><code class=\"language-hbs\"><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">AnimatedOrphans</span>/&gt;</span></span>\n</code></pre>\n</div>","lineNumber":24,"access":"public","tags":[],"isInterface":false,"exportType":"default","decorators":[],"fields":[],"methods":[],"accessors":[],"parentClassId":null,"arguments":[],"yields":[]}},{"type":"module","id":"ember-animated/components/animated-orphans","attributes":{"file":"ember-animated/components/animated-orphans","functions":[],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[{"type":"component","id":"ember-animated/components/animated-orphans~animated-orphans"}]}}},{"type":"component","id":"ember-animated/components/animated-value~animated-value","attributes":{"name":"animated-value","file":"ember-animated/components/animated-value","description":"<div class=\"docs-md\"><p>A component that animates when a single value changes.\nAnimated-value uses the same arguments as animated-each.</p>\n<pre class=\"docs-md__code\"><code class=\"language-hbs\"><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">AnimatedContainer</span>&gt;</span>\n  </span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">animated-value</span> this.counter <span class=\"hljs-attr\">rules</span>=this.rules <span class=\"hljs-attr\">duration</span>=<span class=\"hljs-number\">100</span> <span class=\"hljs-keyword\">as</span> |v|}}</span><span class=\"language-xml\">\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;numbers&quot;</span>&gt;</span></span><span class=\"hljs-template-variable\">{{<span class=\"hljs-name\">v</span>}}</span><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n  </span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">animated-value</span>}}</span><span class=\"language-xml\">\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">AnimatedContainer</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> </span></span><span class=\"hljs-template-variable\">{{<span class=\"hljs-name\"><span class=\"hljs-built_in\">action</span></span> <span class=\"hljs-string\">&quot;increment&quot;</span>}}</span><span class=\"language-xml\"><span class=\"hljs-tag\">&gt;</span>+<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> </span></span><span class=\"hljs-template-variable\">{{<span class=\"hljs-name\"><span class=\"hljs-built_in\">action</span></span> <span class=\"hljs-string\">&quot;decrement&quot;</span>}}</span><span class=\"language-xml\"><span class=\"hljs-tag\">&gt;</span>-<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span></span>\n</code></pre>\n<pre class=\"docs-md__code\"><code class=\"language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Component</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@ember/component&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { toLeft, toRight } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;ember-animated/transitions/move-over&#x27;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">Component</span>.<span class=\"hljs-title function_\">extend</span>({\n  <span class=\"hljs-title function_\">rules</span>(<span class=\"hljs-params\">{ oldItems, newItems }</span>) {\n    <span class=\"hljs-keyword\">if</span> (oldItems[<span class=\"hljs-number\">0</span>] &lt; newItems[<span class=\"hljs-number\">0</span>]) {\n      <span class=\"hljs-keyword\">return</span> toLeft;\n    } <span class=\"hljs-keyword\">else</span> {\n      <span class=\"hljs-keyword\">return</span> toRight;\n    }\n  },\n\n  <span class=\"hljs-attr\">counter</span>: <span class=\"hljs-number\">10</span>,\n\n  <span class=\"hljs-attr\">actions</span>: {\n    <span class=\"hljs-title function_\">increment</span>(<span class=\"hljs-params\"></span>) {\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">&#x27;counter&#x27;</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;counter&#x27;</span>) + <span class=\"hljs-number\">1</span>);\n    },\n    <span class=\"hljs-title function_\">decrement</span>(<span class=\"hljs-params\"></span>) {\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">&#x27;counter&#x27;</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;counter&#x27;</span>) - <span class=\"hljs-number\">1</span>);\n    }\n  }\n});\n</code></pre>\n</div>","lineNumber":17,"access":"public","tags":[],"isInterface":false,"exportType":"default","decorators":[],"fields":[],"methods":[],"accessors":[],"parentClassId":null,"arguments":[{"name":"items","file":"ember-animated/components/animated-value","description":"<div class=\"docs-md\"><p>The data you are trying to render.</p>\n</div>","lineNumber":64,"access":"public","tags":[],"type":"unknown","isStatic":false,"decorators":[]}],"yields":[]}},{"type":"module","id":"ember-animated/components/animated-value","attributes":{"file":"ember-animated/components/animated-value","functions":[],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[{"type":"component","id":"ember-animated/components/animated-value~animated-value"}]}}},{"type":"module","id":"ember-animated/motions/adjust-css","attributes":{"file":"ember-animated/motions/adjust-css","functions":[{"name":"adjustCSS","file":"ember-animated/motions/adjust-css","description":"<div class=\"docs-md\"><p>Animates the change in style of a Sprite. Applies to CSS properties that are a unit and a number (font-size, letter spacing, etc.).</p>\n</div>","lineNumber":7,"access":"public","tags":[],"returns":{"type":"Motion","description":"","properties":[]},"params":[{"name":"propertyName","type":"string","description":"The CSS property to adjust"},{"name":"sprite","type":"Sprite","description":"The sprite we're adjusting"},{"name":"options","type":"object","description":""}],"isAsync":false,"isGenerator":false,"exportType":"default"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}},{"type":"module","id":"ember-animated/motions/move","attributes":{"file":"ember-animated/motions/move","functions":[{"name":"move","file":"ember-animated/motions/move","description":"<div class=\"docs-md\"><p>Animates <em>sprite</em> from its initial position to its final position.</p>\n<p><em>sprite</em> must have both <code>initialBounds</code> and <code>finalBounds</code> set.</p>\n<pre class=\"docs-md__code\"><code class=\"language-js\"><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> sprite <span class=\"hljs-keyword\">of</span> keptSprites) {\n  <span class=\"hljs-title function_\">move</span>(sprite)\n}\n</code></pre>\n</div>","lineNumber":6,"access":"public","tags":[],"returns":{"type":"Motion","description":"","properties":[]},"params":[{"name":"sprite","type":"Sprite","description":""}],"isAsync":false,"isGenerator":false,"exportType":"default"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}},{"type":"module","id":"ember-animated/motions/opacity","attributes":{"file":"ember-animated/motions/opacity","functions":[{"name":"fadeIn","file":"ember-animated/motions/opacity","description":"<div class=\"docs-md\"><p>Animates in a sprite from 0% to 100% opacity.</p>\n<pre class=\"docs-md__code\"><code class=\"language-js\"><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> sprite <span class=\"hljs-keyword\">of</span> insertedSprites) {\n  <span class=\"hljs-title function_\">fadeIn</span>(sprite)\n}\n</code></pre>\n</div>","lineNumber":14,"access":"public","tags":[],"returns":{"type":"Motion","description":"","properties":[]},"params":[{"name":"sprite","type":"Sprite","description":""}],"isAsync":false,"isGenerator":false,"exportType":"named"},{"name":"fadeOut","file":"ember-animated/motions/opacity","description":"<div class=\"docs-md\"><p>Animates out a sprite from 100% to 0% opacity.</p>\n<pre class=\"docs-md__code\"><code class=\"language-js\"><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> sprite <span class=\"hljs-keyword\">of</span> removedSprites) {\n  <span class=\"hljs-title function_\">fadeOut</span>(sprite)\n}\n</code></pre>\n</div>","lineNumber":37,"access":"public","tags":[],"returns":{"type":"Motion","description":"","properties":[]},"params":[{"name":"sprite","type":"Sprite","description":""}],"isAsync":false,"isGenerator":false,"exportType":"named"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}},{"type":"module","id":"ember-animated/motions/resize","attributes":{"file":"ember-animated/motions/resize","functions":[{"name":"resize","file":"ember-animated/motions/resize","description":"<div class=\"docs-md\"><p>Smoothly resizes <em>sprite</em> from its the initial size to its final size.</p>\n<p><em>sprite</em> must have both <code>initialBounds</code> and <code>finalBounds</code> set.</p>\n<p>Consider using <code>scale</code> instead because scale uses CSS transforms and will not trigger reflow.</p>\n<pre class=\"docs-md__code\"><code class=\"language-js\"><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> sprite <span class=\"hljs-keyword\">of</span> insertedSprites) {\n  sprite.<span class=\"hljs-title function_\">startAtSprite</span>(beacons[<span class=\"hljs-string\">&#x27;source&#x27;</span>]);\n  <span class=\"hljs-title function_\">resize</span>(sprite)\n}\n</code></pre>\n</div>","lineNumber":10,"access":"public","tags":[],"returns":{"type":"Motion","description":"","properties":[]},"params":[{"name":"sprite","type":"Sprite","description":""}],"isAsync":false,"isGenerator":false,"exportType":"default"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}},{"type":"module","id":"ember-animated/motions/scale","attributes":{"file":"ember-animated/motions/scale","functions":[{"name":"scale","file":"ember-animated/motions/scale","description":"<div class=\"docs-md\"><p>Smoothly scales <em>sprite</em> from its the initial size to its final size.</p>\n<p><em>sprite</em> must have both <code>initialBounds</code> and <code>finalBounds</code> set.</p>\n<pre class=\"docs-md__code\"><code class=\"language-js\"><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> sprite <span class=\"hljs-keyword\">of</span> insertedSprites) {\n  sprite.<span class=\"hljs-title function_\">startAtSprite</span>(beacons[<span class=\"hljs-string\">&#x27;source&#x27;</span>]);\n  <span class=\"hljs-title function_\">scale</span>(sprite)\n}\n</code></pre>\n</div>","lineNumber":6,"access":"public","tags":[],"returns":{"type":"Motion","description":"","properties":[]},"params":[{"name":"sprite","type":"Sprite","description":""}],"isAsync":false,"isGenerator":false,"exportType":"default"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}},{"type":"module","id":"ember-animated/transitions/fade","attributes":{"file":"ember-animated/transitions/fade","functions":[{"name":"fade","file":"ember-animated/transitions/fade","description":"<div class=\"docs-md\"><p>Fades inserted, removed, and kept sprites.</p>\n<pre class=\"docs-md__code\"><code class=\"language-js\"><span class=\"hljs-keyword\">import</span> fade <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;ember-animated/transitions/fade&#x27;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">Component</span>.<span class=\"hljs-title function_\">extend</span>({\n  <span class=\"hljs-attr\">transition</span>: fade\n});\n</code></pre>\n<pre class=\"docs-md__code\"><code class=\"language-hbs\"><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">animated-<span class=\"hljs-built_in\">if</span></span> <span class=\"hljs-attr\">use</span>=transition}}</span><span class=\"language-xml\">\n  ...\n</span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">animated-<span class=\"hljs-built_in\">if</span></span>}}</span>\n</code></pre>\n</div>","lineNumber":4,"access":"public","tags":[],"returns":null,"params":[],"isAsync":false,"isGenerator":false,"exportType":"default"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}}]}
